// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#ifndef PROTOBUF_common_2eproto__INCLUDED
#define PROTOBUF_common_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "gameregProtoc.pb.h"
// @@protoc_insertion_point(includes)
class tagAIAction;
class tagAIActionDefaultTypeInternal;
extern tagAIActionDefaultTypeInternal _tagAIAction_default_instance_;
class tagAgentState;
class tagAgentStateDefaultTypeInternal;
extern tagAgentStateDefaultTypeInternal _tagAgentState_default_instance_;
class tagChangeGameState;
class tagChangeGameStateDefaultTypeInternal;
extern tagChangeGameStateDefaultTypeInternal _tagChangeGameState_default_instance_;
class tagGameActionPoint;
class tagGameActionPointDefaultTypeInternal;
extern tagGameActionPointDefaultTypeInternal _tagGameActionPoint_default_instance_;
class tagGameActionResult;
class tagGameActionResultDefaultTypeInternal;
extern tagGameActionResultDefaultTypeInternal _tagGameActionResult_default_instance_;
class tagIMTrainState;
class tagIMTrainStateDefaultTypeInternal;
extern tagIMTrainStateDefaultTypeInternal _tagIMTrainState_default_instance_;
class tagMessage;
class tagMessageDefaultTypeInternal;
extern tagMessageDefaultTypeInternal _tagMessage_default_instance_;
class tagNewTask;
class tagNewTaskDefaultTypeInternal;
extern tagNewTaskDefaultTypeInternal _tagNewTask_default_instance_;
class tagPBAgentMsg;
class tagPBAgentMsgDefaultTypeInternal;
extern tagPBAgentMsgDefaultTypeInternal _tagPBAgentMsg_default_instance_;
class tagPBAgentTaskElement;
class tagPBAgentTaskElementDefaultTypeInternal;
extern tagPBAgentTaskElementDefaultTypeInternal _tagPBAgentTaskElement_default_instance_;
class tagPBAgentTaskTsk;
class tagPBAgentTaskTskDefaultTypeInternal;
extern tagPBAgentTaskTskDefaultTypeInternal _tagPBAgentTaskTsk_default_instance_;
class tagPBAgentTaskValue;
class tagPBAgentTaskValueDefaultTypeInternal;
extern tagPBAgentTaskValueDefaultTypeInternal _tagPBAgentTaskValue_default_instance_;
class tagPBBlood;
class tagPBBloodDefaultTypeInternal;
extern tagPBBloodDefaultTypeInternal _tagPBBlood_default_instance_;
class tagPBBox;
class tagPBBoxDefaultTypeInternal;
extern tagPBBoxDefaultTypeInternal _tagPBBox_default_instance_;
class tagPBPoint;
class tagPBPointDefaultTypeInternal;
extern tagPBPointDefaultTypeInternal _tagPBPoint_default_instance_;
class tagPBRect;
class tagPBRectDefaultTypeInternal;
extern tagPBRectDefaultTypeInternal _tagPBRect_default_instance_;
class tagPBResult;
class tagPBResultDefaultTypeInternal;
extern tagPBResultDefaultTypeInternal _tagPBResult_default_instance_;
class tagPBResultRes;
class tagPBResultResDefaultTypeInternal;
extern tagPBResultResDefaultTypeInternal _tagPBResultRes_default_instance_;
class tagPBResultValue;
class tagPBResultValueDefaultTypeInternal;
extern tagPBResultValueDefaultTypeInternal _tagPBResultValue_default_instance_;
class tagPBTaskFlagMap;
class tagPBTaskFlagMapDefaultTypeInternal;
extern tagPBTaskFlagMapDefaultTypeInternal _tagPBTaskFlagMap_default_instance_;
class tagPBTemplate;
class tagPBTemplateDefaultTypeInternal;
extern tagPBTemplateDefaultTypeInternal _tagPBTemplate_default_instance_;
class tagPBTemplates;
class tagPBTemplatesDefaultTypeInternal;
extern tagPBTemplatesDefaultTypeInternal _tagPBTemplates_default_instance_;
class tagRestartResult;
class tagRestartResultDefaultTypeInternal;
extern tagRestartResultDefaultTypeInternal _tagRestartResult_default_instance_;
class tagServiceRegister;
class tagServiceRegisterDefaultTypeInternal;
extern tagServiceRegisterDefaultTypeInternal _tagServiceRegister_default_instance_;
class tagServiceState;
class tagServiceStateDefaultTypeInternal;
extern tagServiceStateDefaultTypeInternal _tagServiceState_default_instance_;
class tagSrcImageInfo;
class tagSrcImageInfoDefaultTypeInternal;
extern tagSrcImageInfoDefaultTypeInternal _tagSrcImageInfo_default_instance_;
class tagTaskReport;
class tagTaskReportDefaultTypeInternal;
extern tagTaskReportDefaultTypeInternal _tagTaskReport_default_instance_;
class tagTestID;
class tagTestIDDefaultTypeInternal;
extern tagTestIDDefaultTypeInternal _tagTestID_default_instance_;
class tagUIAPIState;
class tagUIAPIStateDefaultTypeInternal;
extern tagUIAPIStateDefaultTypeInternal _tagUIAPIState_default_instance_;
class tagUIAction;
class tagUIActionDefaultTypeInternal;
extern tagUIActionDefaultTypeInternal _tagUIAction_default_instance_;
class tagUIPoint;
class tagUIPointDefaultTypeInternal;
extern tagUIPointDefaultTypeInternal _tagUIPoint_default_instance_;
class tagUIUnitAction;
class tagUIUnitActionDefaultTypeInternal;
extern tagUIUnitActionDefaultTypeInternal _tagUIUnitAction_default_instance_;

namespace protobuf_common_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_common_2eproto

enum EMSGIDENUM {
  MSG_NONE = 0,
  MSG_SRC_IMAGE_INFO = 10000,
  MSG_SERVICE_REGISTER = 10001,
  MSG_TASK_REPORT = 10002,
  MSG_SERVICE_STATE = 10003,
  MSG_CHANGE_GAME_STATE = 10004,
  MSG_PAUSE_AGENT = 10005,
  MSG_RESTORE_AGENT = 10006,
  MSG_RESTART = 10007,
  MSG_NEW_TASK = 10008,
  MSG_TEST_ID = 10009,
  MSG_GAMEREG_INFO = 10010,
  MSG_AI_ACTION = 40001,
  MSG_AGENT_STATE = 40002,
  MSG_RESTART_RESULT = 40003,
  MSG_UI_GAME_START = 40004,
  MSG_UI_GAME_OVER = 40005,
  MSG_IM_TRAIN_STATE = 40006,
  MSG_UI_STATE_IMG = 80001,
  MSG_UI_ACTION = 80002,
  EMSGIDENUM_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EMSGIDENUM_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EMSGIDENUM_IsValid(int value);
const EMSGIDENUM EMSGIDENUM_MIN = MSG_NONE;
const EMSGIDENUM EMSGIDENUM_MAX = MSG_UI_ACTION;
const int EMSGIDENUM_ARRAYSIZE = EMSGIDENUM_MAX + 1;

const ::google::protobuf::EnumDescriptor* EMSGIDENUM_descriptor();
inline const ::std::string& EMSGIDENUM_Name(EMSGIDENUM value) {
  return ::google::protobuf::internal::NameOfEnum(
    EMSGIDENUM_descriptor(), value);
}
inline bool EMSGIDENUM_Parse(
    const ::std::string& name, EMSGIDENUM* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EMSGIDENUM>(
    EMSGIDENUM_descriptor(), name, value);
}
enum ESERVICETYPEENUM {
  PB_SERVICE_TYPE_UI = 0,
  PB_SERVICE_TYPE_AI = 1,
  PB_SERVICE_TYPE_REG = 2,
  PB_SERVICE_TYPE_MC = 3,
  ESERVICETYPEENUM_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ESERVICETYPEENUM_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ESERVICETYPEENUM_IsValid(int value);
const ESERVICETYPEENUM ESERVICETYPEENUM_MIN = PB_SERVICE_TYPE_UI;
const ESERVICETYPEENUM ESERVICETYPEENUM_MAX = PB_SERVICE_TYPE_MC;
const int ESERVICETYPEENUM_ARRAYSIZE = ESERVICETYPEENUM_MAX + 1;

const ::google::protobuf::EnumDescriptor* ESERVICETYPEENUM_descriptor();
inline const ::std::string& ESERVICETYPEENUM_Name(ESERVICETYPEENUM value) {
  return ::google::protobuf::internal::NameOfEnum(
    ESERVICETYPEENUM_descriptor(), value);
}
inline bool ESERVICETYPEENUM_Parse(
    const ::std::string& name, ESERVICETYPEENUM* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESERVICETYPEENUM>(
    ESERVICETYPEENUM_descriptor(), name, value);
}
enum ESERVICEREGISTERENUM {
  PB_SERVICE_REGISTER = 0,
  PB_SERVICE_UNREGISTER = 1,
  ESERVICEREGISTERENUM_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ESERVICEREGISTERENUM_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ESERVICEREGISTERENUM_IsValid(int value);
const ESERVICEREGISTERENUM ESERVICEREGISTERENUM_MIN = PB_SERVICE_REGISTER;
const ESERVICEREGISTERENUM ESERVICEREGISTERENUM_MAX = PB_SERVICE_UNREGISTER;
const int ESERVICEREGISTERENUM_ARRAYSIZE = ESERVICEREGISTERENUM_MAX + 1;

const ::google::protobuf::EnumDescriptor* ESERVICEREGISTERENUM_descriptor();
inline const ::std::string& ESERVICEREGISTERENUM_Name(ESERVICEREGISTERENUM value) {
  return ::google::protobuf::internal::NameOfEnum(
    ESERVICEREGISTERENUM_descriptor(), value);
}
inline bool ESERVICEREGISTERENUM_Parse(
    const ::std::string& name, ESERVICEREGISTERENUM* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESERVICEREGISTERENUM>(
    ESERVICEREGISTERENUM_descriptor(), name, value);
}
enum ETASKSTATUSENUM {
  PB_TASK_INIT_SUCCESS = 0,
  PB_TASK_INIT_FAILURE = 1,
  ETASKSTATUSENUM_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ETASKSTATUSENUM_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ETASKSTATUSENUM_IsValid(int value);
const ETASKSTATUSENUM ETASKSTATUSENUM_MIN = PB_TASK_INIT_SUCCESS;
const ETASKSTATUSENUM ETASKSTATUSENUM_MAX = PB_TASK_INIT_FAILURE;
const int ETASKSTATUSENUM_ARRAYSIZE = ETASKSTATUSENUM_MAX + 1;

const ::google::protobuf::EnumDescriptor* ETASKSTATUSENUM_descriptor();
inline const ::std::string& ETASKSTATUSENUM_Name(ETASKSTATUSENUM value) {
  return ::google::protobuf::internal::NameOfEnum(
    ETASKSTATUSENUM_descriptor(), value);
}
inline bool ETASKSTATUSENUM_Parse(
    const ::std::string& name, ETASKSTATUSENUM* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ETASKSTATUSENUM>(
    ETASKSTATUSENUM_descriptor(), name, value);
}
enum GAMESTATEENUM {
  PB_STATE_NONE = 0,
  PB_STATE_UI = 1,
  PB_STATE_START = 2,
  PB_STATE_OVER = 3,
  PB_STATE_MATCH_WIN = 4,
  GAMESTATEENUM_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GAMESTATEENUM_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GAMESTATEENUM_IsValid(int value);
const GAMESTATEENUM GAMESTATEENUM_MIN = PB_STATE_NONE;
const GAMESTATEENUM GAMESTATEENUM_MAX = PB_STATE_MATCH_WIN;
const int GAMESTATEENUM_ARRAYSIZE = GAMESTATEENUM_MAX + 1;

const ::google::protobuf::EnumDescriptor* GAMESTATEENUM_descriptor();
inline const ::std::string& GAMESTATEENUM_Name(GAMESTATEENUM value) {
  return ::google::protobuf::internal::NameOfEnum(
    GAMESTATEENUM_descriptor(), value);
}
inline bool GAMESTATEENUM_Parse(
    const ::std::string& name, GAMESTATEENUM* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GAMESTATEENUM>(
    GAMESTATEENUM_descriptor(), name, value);
}
enum EUIAPISTATEENUM {
  PB_UI_STATE_NORMAL = 0,
  PB_UI_STATE_STUCK = 1,
  EUIAPISTATEENUM_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EUIAPISTATEENUM_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EUIAPISTATEENUM_IsValid(int value);
const EUIAPISTATEENUM EUIAPISTATEENUM_MIN = PB_UI_STATE_NORMAL;
const EUIAPISTATEENUM EUIAPISTATEENUM_MAX = PB_UI_STATE_STUCK;
const int EUIAPISTATEENUM_ARRAYSIZE = EUIAPISTATEENUM_MAX + 1;

const ::google::protobuf::EnumDescriptor* EUIAPISTATEENUM_descriptor();
inline const ::std::string& EUIAPISTATEENUM_Name(EUIAPISTATEENUM value) {
  return ::google::protobuf::internal::NameOfEnum(
    EUIAPISTATEENUM_descriptor(), value);
}
inline bool EUIAPISTATEENUM_Parse(
    const ::std::string& name, EUIAPISTATEENUM* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EUIAPISTATEENUM>(
    EUIAPISTATEENUM_descriptor(), name, value);
}
enum EUIAPIACTIONENUM {
  PB_UI_ACTION_NONE = 0,
  PB_UI_ACTION_CLICK = 1,
  PB_UI_ACTION_DRAG = 2,
  PB_UI_ACTION_TEXT = 3,
  EUIAPIACTIONENUM_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EUIAPIACTIONENUM_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EUIAPIACTIONENUM_IsValid(int value);
const EUIAPIACTIONENUM EUIAPIACTIONENUM_MIN = PB_UI_ACTION_NONE;
const EUIAPIACTIONENUM EUIAPIACTIONENUM_MAX = PB_UI_ACTION_TEXT;
const int EUIAPIACTIONENUM_ARRAYSIZE = EUIAPIACTIONENUM_MAX + 1;

const ::google::protobuf::EnumDescriptor* EUIAPIACTIONENUM_descriptor();
inline const ::std::string& EUIAPIACTIONENUM_Name(EUIAPIACTIONENUM value) {
  return ::google::protobuf::internal::NameOfEnum(
    EUIAPIACTIONENUM_descriptor(), value);
}
inline bool EUIAPIACTIONENUM_Parse(
    const ::std::string& name, EUIAPIACTIONENUM* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EUIAPIACTIONENUM>(
    EUIAPIACTIONENUM_descriptor(), name, value);
}
enum ESCREENORIENUM {
  PB_SCREEN_ORI_LANDSCAPE = 0,
  PB_SCREEN_ORI_PORTRAIT = 1,
  ESCREENORIENUM_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ESCREENORIENUM_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ESCREENORIENUM_IsValid(int value);
const ESCREENORIENUM ESCREENORIENUM_MIN = PB_SCREEN_ORI_LANDSCAPE;
const ESCREENORIENUM ESCREENORIENUM_MAX = PB_SCREEN_ORI_PORTRAIT;
const int ESCREENORIENUM_ARRAYSIZE = ESCREENORIENUM_MAX + 1;

const ::google::protobuf::EnumDescriptor* ESCREENORIENUM_descriptor();
inline const ::std::string& ESCREENORIENUM_Name(ESCREENORIENUM value) {
  return ::google::protobuf::internal::NameOfEnum(
    ESCREENORIENUM_descriptor(), value);
}
inline bool ESCREENORIENUM_Parse(
    const ::std::string& name, ESCREENORIENUM* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ESCREENORIENUM>(
    ESCREENORIENUM_descriptor(), name, value);
}
enum EGAMEACTIONENUM {
  PB_GAME_ACTION_NONE = 0,
  PB_GAME_ACTION_CLICK = 1,
  PB_GAME_ACTION_SWIPE = 2,
  PB_GAME_ACTION_MOVE = 3,
  PB_GAME_ACTION_PRESSDOWN = 4,
  PB_GAME_ACTION_PRESSUP = 5,
  PB_GAME_ACTION_LONGCLICK = 6,
  PB_GAME_ACTION_RESET = 7,
  PB_GAME_ACTION_SWIPEDOWN = 8,
  PB_GAME_ACTION_SWIPEMOVE = 9,
  EGAMEACTIONENUM_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EGAMEACTIONENUM_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EGAMEACTIONENUM_IsValid(int value);
const EGAMEACTIONENUM EGAMEACTIONENUM_MIN = PB_GAME_ACTION_NONE;
const EGAMEACTIONENUM EGAMEACTIONENUM_MAX = PB_GAME_ACTION_SWIPEMOVE;
const int EGAMEACTIONENUM_ARRAYSIZE = EGAMEACTIONENUM_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGAMEACTIONENUM_descriptor();
inline const ::std::string& EGAMEACTIONENUM_Name(EGAMEACTIONENUM value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGAMEACTIONENUM_descriptor(), value);
}
inline bool EGAMEACTIONENUM_Parse(
    const ::std::string& name, EGAMEACTIONENUM* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGAMEACTIONENUM>(
    EGAMEACTIONENUM_descriptor(), name, value);
}
enum ERESTARTRESULTENUM {
  PB_RESTART_RESULT_SUCCESS = 0,
  PB_RESTART_RESULT_FAILURE = 1,
  ERESTARTRESULTENUM_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ERESTARTRESULTENUM_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ERESTARTRESULTENUM_IsValid(int value);
const ERESTARTRESULTENUM ERESTARTRESULTENUM_MIN = PB_RESTART_RESULT_SUCCESS;
const ERESTARTRESULTENUM ERESTARTRESULTENUM_MAX = PB_RESTART_RESULT_FAILURE;
const int ERESTARTRESULTENUM_ARRAYSIZE = ERESTARTRESULTENUM_MAX + 1;

const ::google::protobuf::EnumDescriptor* ERESTARTRESULTENUM_descriptor();
inline const ::std::string& ERESTARTRESULTENUM_Name(ERESTARTRESULTENUM value) {
  return ::google::protobuf::internal::NameOfEnum(
    ERESTARTRESULTENUM_descriptor(), value);
}
inline bool ERESTARTRESULTENUM_Parse(
    const ::std::string& name, ERESTARTRESULTENUM* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ERESTARTRESULTENUM>(
    ERESTARTRESULTENUM_descriptor(), name, value);
}
// ===================================================================

class tagSrcImageInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tagSrcImageInfo) */ {
 public:
  tagSrcImageInfo();
  virtual ~tagSrcImageInfo();

  tagSrcImageInfo(const tagSrcImageInfo& from);

  inline tagSrcImageInfo& operator=(const tagSrcImageInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagSrcImageInfo& default_instance();

  static inline const tagSrcImageInfo* internal_default_instance() {
    return reinterpret_cast<const tagSrcImageInfo*>(
               &_tagSrcImageInfo_default_instance_);
  }

  void Swap(tagSrcImageInfo* other);

  // implements Message ----------------------------------------------

  inline tagSrcImageInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  tagSrcImageInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tagSrcImageInfo& from);
  void MergeFrom(const tagSrcImageInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tagSrcImageInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes byImageData = 4;
  void clear_byimagedata();
  static const int kByImageDataFieldNumber = 4;
  const ::std::string& byimagedata() const;
  void set_byimagedata(const ::std::string& value);
  #if LANG_CXX11
  void set_byimagedata(::std::string&& value);
  #endif
  void set_byimagedata(const char* value);
  void set_byimagedata(const void* value, size_t size);
  ::std::string* mutable_byimagedata();
  ::std::string* release_byimagedata();
  void set_allocated_byimagedata(::std::string* byimagedata);

  // string strJsonData = 6;
  void clear_strjsondata();
  static const int kStrJsonDataFieldNumber = 6;
  const ::std::string& strjsondata() const;
  void set_strjsondata(const ::std::string& value);
  #if LANG_CXX11
  void set_strjsondata(::std::string&& value);
  #endif
  void set_strjsondata(const char* value);
  void set_strjsondata(const char* value, size_t size);
  ::std::string* mutable_strjsondata();
  ::std::string* release_strjsondata();
  void set_allocated_strjsondata(::std::string* strjsondata);

  // fixed64 uFrameSeq = 1;
  void clear_uframeseq();
  static const int kUFrameSeqFieldNumber = 1;
  ::google::protobuf::uint64 uframeseq() const;
  void set_uframeseq(::google::protobuf::uint64 value);

  // int32 nWidth = 2;
  void clear_nwidth();
  static const int kNWidthFieldNumber = 2;
  ::google::protobuf::int32 nwidth() const;
  void set_nwidth(::google::protobuf::int32 value);

  // int32 nHeight = 3;
  void clear_nheight();
  static const int kNHeightFieldNumber = 3;
  ::google::protobuf::int32 nheight() const;
  void set_nheight(::google::protobuf::int32 value);

  // fixed64 uDeviceIndex = 5;
  void clear_udeviceindex();
  static const int kUDeviceIndexFieldNumber = 5;
  ::google::protobuf::uint64 udeviceindex() const;
  void set_udeviceindex(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:tagSrcImageInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr byimagedata_;
  ::google::protobuf::internal::ArenaStringPtr strjsondata_;
  ::google::protobuf::uint64 uframeseq_;
  ::google::protobuf::int32 nwidth_;
  ::google::protobuf::int32 nheight_;
  ::google::protobuf::uint64 udeviceindex_;
  mutable int _cached_size_;
  friend struct  protobuf_common_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tagServiceRegister : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tagServiceRegister) */ {
 public:
  tagServiceRegister();
  virtual ~tagServiceRegister();

  tagServiceRegister(const tagServiceRegister& from);

  inline tagServiceRegister& operator=(const tagServiceRegister& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagServiceRegister& default_instance();

  static inline const tagServiceRegister* internal_default_instance() {
    return reinterpret_cast<const tagServiceRegister*>(
               &_tagServiceRegister_default_instance_);
  }

  void Swap(tagServiceRegister* other);

  // implements Message ----------------------------------------------

  inline tagServiceRegister* New() const PROTOBUF_FINAL { return New(NULL); }

  tagServiceRegister* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tagServiceRegister& from);
  void MergeFrom(const tagServiceRegister& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tagServiceRegister* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ESERVICEREGISTERENUM eRegisterType = 1;
  void clear_eregistertype();
  static const int kERegisterTypeFieldNumber = 1;
  ::ESERVICEREGISTERENUM eregistertype() const;
  void set_eregistertype(::ESERVICEREGISTERENUM value);

  // .ESERVICETYPEENUM eServiceType = 2;
  void clear_eservicetype();
  static const int kEServiceTypeFieldNumber = 2;
  ::ESERVICETYPEENUM eservicetype() const;
  void set_eservicetype(::ESERVICETYPEENUM value);

  // @@protoc_insertion_point(class_scope:tagServiceRegister)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int eregistertype_;
  int eservicetype_;
  mutable int _cached_size_;
  friend struct  protobuf_common_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tagTaskReport : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tagTaskReport) */ {
 public:
  tagTaskReport();
  virtual ~tagTaskReport();

  tagTaskReport(const tagTaskReport& from);

  inline tagTaskReport& operator=(const tagTaskReport& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagTaskReport& default_instance();

  static inline const tagTaskReport* internal_default_instance() {
    return reinterpret_cast<const tagTaskReport*>(
               &_tagTaskReport_default_instance_);
  }

  void Swap(tagTaskReport* other);

  // implements Message ----------------------------------------------

  inline tagTaskReport* New() const PROTOBUF_FINAL { return New(NULL); }

  tagTaskReport* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tagTaskReport& from);
  void MergeFrom(const tagTaskReport& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tagTaskReport* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ETASKSTATUSENUM eTaskStatus = 1;
  void clear_etaskstatus();
  static const int kETaskStatusFieldNumber = 1;
  ::ETASKSTATUSENUM etaskstatus() const;
  void set_etaskstatus(::ETASKSTATUSENUM value);

  // @@protoc_insertion_point(class_scope:tagTaskReport)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int etaskstatus_;
  mutable int _cached_size_;
  friend struct  protobuf_common_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tagUIPoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tagUIPoint) */ {
 public:
  tagUIPoint();
  virtual ~tagUIPoint();

  tagUIPoint(const tagUIPoint& from);

  inline tagUIPoint& operator=(const tagUIPoint& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagUIPoint& default_instance();

  static inline const tagUIPoint* internal_default_instance() {
    return reinterpret_cast<const tagUIPoint*>(
               &_tagUIPoint_default_instance_);
  }

  void Swap(tagUIPoint* other);

  // implements Message ----------------------------------------------

  inline tagUIPoint* New() const PROTOBUF_FINAL { return New(NULL); }

  tagUIPoint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tagUIPoint& from);
  void MergeFrom(const tagUIPoint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tagUIPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 nX = 1;
  void clear_nx();
  static const int kNXFieldNumber = 1;
  ::google::protobuf::int32 nx() const;
  void set_nx(::google::protobuf::int32 value);

  // int32 nY = 2;
  void clear_ny();
  static const int kNYFieldNumber = 2;
  ::google::protobuf::int32 ny() const;
  void set_ny(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tagUIPoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 nx_;
  ::google::protobuf::int32 ny_;
  mutable int _cached_size_;
  friend struct  protobuf_common_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tagUIUnitAction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tagUIUnitAction) */ {
 public:
  tagUIUnitAction();
  virtual ~tagUIUnitAction();

  tagUIUnitAction(const tagUIUnitAction& from);

  inline tagUIUnitAction& operator=(const tagUIUnitAction& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagUIUnitAction& default_instance();

  static inline const tagUIUnitAction* internal_default_instance() {
    return reinterpret_cast<const tagUIUnitAction*>(
               &_tagUIUnitAction_default_instance_);
  }

  void Swap(tagUIUnitAction* other);

  // implements Message ----------------------------------------------

  inline tagUIUnitAction* New() const PROTOBUF_FINAL { return New(NULL); }

  tagUIUnitAction* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tagUIUnitAction& from);
  void MergeFrom(const tagUIUnitAction& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tagUIUnitAction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .tagUIPoint stDragPoints = 4;
  int stdragpoints_size() const;
  void clear_stdragpoints();
  static const int kStDragPointsFieldNumber = 4;
  const ::tagUIPoint& stdragpoints(int index) const;
  ::tagUIPoint* mutable_stdragpoints(int index);
  ::tagUIPoint* add_stdragpoints();
  ::google::protobuf::RepeatedPtrField< ::tagUIPoint >*
      mutable_stdragpoints();
  const ::google::protobuf::RepeatedPtrField< ::tagUIPoint >&
      stdragpoints() const;

  // string strText = 1;
  void clear_strtext();
  static const int kStrTextFieldNumber = 1;
  const ::std::string& strtext() const;
  void set_strtext(const ::std::string& value);
  #if LANG_CXX11
  void set_strtext(::std::string&& value);
  #endif
  void set_strtext(const char* value);
  void set_strtext(const char* value, size_t size);
  ::std::string* mutable_strtext();
  ::std::string* release_strtext();
  void set_allocated_strtext(::std::string* strtext);

  // .tagUIPoint stClickPoint = 3;
  bool has_stclickpoint() const;
  void clear_stclickpoint();
  static const int kStClickPointFieldNumber = 3;
  const ::tagUIPoint& stclickpoint() const;
  ::tagUIPoint* mutable_stclickpoint();
  ::tagUIPoint* release_stclickpoint();
  void set_allocated_stclickpoint(::tagUIPoint* stclickpoint);

  // .EUIAPIACTIONENUM eUIAction = 2;
  void clear_euiaction();
  static const int kEUIActionFieldNumber = 2;
  ::EUIAPIACTIONENUM euiaction() const;
  void set_euiaction(::EUIAPIACTIONENUM value);

  // int32 nDuringTimeMs = 5;
  void clear_nduringtimems();
  static const int kNDuringTimeMsFieldNumber = 5;
  ::google::protobuf::int32 nduringtimems() const;
  void set_nduringtimems(::google::protobuf::int32 value);

  // int32 nSleepTimeMs = 6;
  void clear_nsleeptimems();
  static const int kNSleepTimeMsFieldNumber = 6;
  ::google::protobuf::int32 nsleeptimems() const;
  void set_nsleeptimems(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tagUIUnitAction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::tagUIPoint > stdragpoints_;
  ::google::protobuf::internal::ArenaStringPtr strtext_;
  ::tagUIPoint* stclickpoint_;
  int euiaction_;
  ::google::protobuf::int32 nduringtimems_;
  ::google::protobuf::int32 nsleeptimems_;
  mutable int _cached_size_;
  friend struct  protobuf_common_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tagUIAction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tagUIAction) */ {
 public:
  tagUIAction();
  virtual ~tagUIAction();

  tagUIAction(const tagUIAction& from);

  inline tagUIAction& operator=(const tagUIAction& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagUIAction& default_instance();

  static inline const tagUIAction* internal_default_instance() {
    return reinterpret_cast<const tagUIAction*>(
               &_tagUIAction_default_instance_);
  }

  void Swap(tagUIAction* other);

  // implements Message ----------------------------------------------

  inline tagUIAction* New() const PROTOBUF_FINAL { return New(NULL); }

  tagUIAction* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tagUIAction& from);
  void MergeFrom(const tagUIAction& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tagUIAction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .tagUIUnitAction stUIUnitAction = 3;
  int stuiunitaction_size() const;
  void clear_stuiunitaction();
  static const int kStUIUnitActionFieldNumber = 3;
  const ::tagUIUnitAction& stuiunitaction(int index) const;
  ::tagUIUnitAction* mutable_stuiunitaction(int index);
  ::tagUIUnitAction* add_stuiunitaction();
  ::google::protobuf::RepeatedPtrField< ::tagUIUnitAction >*
      mutable_stuiunitaction();
  const ::google::protobuf::RepeatedPtrField< ::tagUIUnitAction >&
      stuiunitaction() const;

  // .tagSrcImageInfo stSrcImageInfo = 2;
  bool has_stsrcimageinfo() const;
  void clear_stsrcimageinfo();
  static const int kStSrcImageInfoFieldNumber = 2;
  const ::tagSrcImageInfo& stsrcimageinfo() const;
  ::tagSrcImageInfo* mutable_stsrcimageinfo();
  ::tagSrcImageInfo* release_stsrcimageinfo();
  void set_allocated_stsrcimageinfo(::tagSrcImageInfo* stsrcimageinfo);

  // .GAMESTATEENUM eGameState = 1;
  void clear_egamestate();
  static const int kEGameStateFieldNumber = 1;
  ::GAMESTATEENUM egamestate() const;
  void set_egamestate(::GAMESTATEENUM value);

  // int32 nUIID = 4;
  void clear_nuiid();
  static const int kNUIIDFieldNumber = 4;
  ::google::protobuf::int32 nuiid() const;
  void set_nuiid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tagUIAction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::tagUIUnitAction > stuiunitaction_;
  ::tagSrcImageInfo* stsrcimageinfo_;
  int egamestate_;
  ::google::protobuf::int32 nuiid_;
  mutable int _cached_size_;
  friend struct  protobuf_common_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tagUIAPIState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tagUIAPIState) */ {
 public:
  tagUIAPIState();
  virtual ~tagUIAPIState();

  tagUIAPIState(const tagUIAPIState& from);

  inline tagUIAPIState& operator=(const tagUIAPIState& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagUIAPIState& default_instance();

  static inline const tagUIAPIState* internal_default_instance() {
    return reinterpret_cast<const tagUIAPIState*>(
               &_tagUIAPIState_default_instance_);
  }

  void Swap(tagUIAPIState* other);

  // implements Message ----------------------------------------------

  inline tagUIAPIState* New() const PROTOBUF_FINAL { return New(NULL); }

  tagUIAPIState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tagUIAPIState& from);
  void MergeFrom(const tagUIAPIState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tagUIAPIState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .tagSrcImageInfo stUIImage = 2;
  bool has_stuiimage() const;
  void clear_stuiimage();
  static const int kStUIImageFieldNumber = 2;
  const ::tagSrcImageInfo& stuiimage() const;
  ::tagSrcImageInfo* mutable_stuiimage();
  ::tagSrcImageInfo* release_stuiimage();
  void set_allocated_stuiimage(::tagSrcImageInfo* stuiimage);

  // .tagUIAction stUIAction = 3;
  bool has_stuiaction() const;
  void clear_stuiaction();
  static const int kStUIActionFieldNumber = 3;
  const ::tagUIAction& stuiaction() const;
  ::tagUIAction* mutable_stuiaction();
  ::tagUIAction* release_stuiaction();
  void set_allocated_stuiaction(::tagUIAction* stuiaction);

  // .EUIAPISTATEENUM eUIState = 1;
  void clear_euistate();
  static const int kEUIStateFieldNumber = 1;
  ::EUIAPISTATEENUM euistate() const;
  void set_euistate(::EUIAPISTATEENUM value);

  // .GAMESTATEENUM eGameState = 4;
  void clear_egamestate();
  static const int kEGameStateFieldNumber = 4;
  ::GAMESTATEENUM egamestate() const;
  void set_egamestate(::GAMESTATEENUM value);

  // .ESCREENORIENUM eScreenOri = 5;
  void clear_escreenori();
  static const int kEScreenOriFieldNumber = 5;
  ::ESCREENORIENUM escreenori() const;
  void set_escreenori(::ESCREENORIENUM value);

  // @@protoc_insertion_point(class_scope:tagUIAPIState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::tagSrcImageInfo* stuiimage_;
  ::tagUIAction* stuiaction_;
  int euistate_;
  int egamestate_;
  int escreenori_;
  mutable int _cached_size_;
  friend struct  protobuf_common_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tagGameActionPoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tagGameActionPoint) */ {
 public:
  tagGameActionPoint();
  virtual ~tagGameActionPoint();

  tagGameActionPoint(const tagGameActionPoint& from);

  inline tagGameActionPoint& operator=(const tagGameActionPoint& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagGameActionPoint& default_instance();

  static inline const tagGameActionPoint* internal_default_instance() {
    return reinterpret_cast<const tagGameActionPoint*>(
               &_tagGameActionPoint_default_instance_);
  }

  void Swap(tagGameActionPoint* other);

  // implements Message ----------------------------------------------

  inline tagGameActionPoint* New() const PROTOBUF_FINAL { return New(NULL); }

  tagGameActionPoint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tagGameActionPoint& from);
  void MergeFrom(const tagGameActionPoint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tagGameActionPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 nX = 1;
  void clear_nx();
  static const int kNXFieldNumber = 1;
  ::google::protobuf::int32 nx() const;
  void set_nx(::google::protobuf::int32 value);

  // int32 nY = 2;
  void clear_ny();
  static const int kNYFieldNumber = 2;
  ::google::protobuf::int32 ny() const;
  void set_ny(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tagGameActionPoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 nx_;
  ::google::protobuf::int32 ny_;
  mutable int _cached_size_;
  friend struct  protobuf_common_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tagGameActionResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tagGameActionResult) */ {
 public:
  tagGameActionResult();
  virtual ~tagGameActionResult();

  tagGameActionResult(const tagGameActionResult& from);

  inline tagGameActionResult& operator=(const tagGameActionResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagGameActionResult& default_instance();

  static inline const tagGameActionResult* internal_default_instance() {
    return reinterpret_cast<const tagGameActionResult*>(
               &_tagGameActionResult_default_instance_);
  }

  void Swap(tagGameActionResult* other);

  // implements Message ----------------------------------------------

  inline tagGameActionResult* New() const PROTOBUF_FINAL { return New(NULL); }

  tagGameActionResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tagGameActionResult& from);
  void MergeFrom(const tagGameActionResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tagGameActionResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .tagGameActionPoint stGameActionPoint = 2;
  int stgameactionpoint_size() const;
  void clear_stgameactionpoint();
  static const int kStGameActionPointFieldNumber = 2;
  const ::tagGameActionPoint& stgameactionpoint(int index) const;
  ::tagGameActionPoint* mutable_stgameactionpoint(int index);
  ::tagGameActionPoint* add_stgameactionpoint();
  ::google::protobuf::RepeatedPtrField< ::tagGameActionPoint >*
      mutable_stgameactionpoint();
  const ::google::protobuf::RepeatedPtrField< ::tagGameActionPoint >&
      stgameactionpoint() const;

  // .EGAMEACTIONENUM eGameActionType = 1;
  void clear_egameactiontype();
  static const int kEGameActionTypeFieldNumber = 1;
  ::EGAMEACTIONENUM egameactiontype() const;
  void set_egameactiontype(::EGAMEACTIONENUM value);

  // int32 nContact = 3;
  void clear_ncontact();
  static const int kNContactFieldNumber = 3;
  ::google::protobuf::int32 ncontact() const;
  void set_ncontact(::google::protobuf::int32 value);

  // int32 nDuringTime = 4;
  void clear_nduringtime();
  static const int kNDuringTimeFieldNumber = 4;
  ::google::protobuf::int32 nduringtime() const;
  void set_nduringtime(::google::protobuf::int32 value);

  // int32 nWaitTime = 5;
  void clear_nwaittime();
  static const int kNWaitTimeFieldNumber = 5;
  ::google::protobuf::int32 nwaittime() const;
  void set_nwaittime(::google::protobuf::int32 value);

  // sfixed64 nFrameSeq = 6;
  void clear_nframeseq();
  static const int kNFrameSeqFieldNumber = 6;
  ::google::protobuf::int64 nframeseq() const;
  void set_nframeseq(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:tagGameActionResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::tagGameActionPoint > stgameactionpoint_;
  int egameactiontype_;
  ::google::protobuf::int32 ncontact_;
  ::google::protobuf::int32 nduringtime_;
  ::google::protobuf::int32 nwaittime_;
  ::google::protobuf::int64 nframeseq_;
  mutable int _cached_size_;
  friend struct  protobuf_common_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tagAIAction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tagAIAction) */ {
 public:
  tagAIAction();
  virtual ~tagAIAction();

  tagAIAction(const tagAIAction& from);

  inline tagAIAction& operator=(const tagAIAction& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagAIAction& default_instance();

  static inline const tagAIAction* internal_default_instance() {
    return reinterpret_cast<const tagAIAction*>(
               &_tagAIAction_default_instance_);
  }

  void Swap(tagAIAction* other);

  // implements Message ----------------------------------------------

  inline tagAIAction* New() const PROTOBUF_FINAL { return New(NULL); }

  tagAIAction* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tagAIAction& from);
  void MergeFrom(const tagAIAction& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tagAIAction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes byAIActionBuff = 2;
  void clear_byaiactionbuff();
  static const int kByAIActionBuffFieldNumber = 2;
  const ::std::string& byaiactionbuff() const;
  void set_byaiactionbuff(const ::std::string& value);
  #if LANG_CXX11
  void set_byaiactionbuff(::std::string&& value);
  #endif
  void set_byaiactionbuff(const char* value);
  void set_byaiactionbuff(const void* value, size_t size);
  ::std::string* mutable_byaiactionbuff();
  ::std::string* release_byaiactionbuff();
  void set_allocated_byaiactionbuff(::std::string* byaiactionbuff);

  // sfixed64 nFrameSeq = 1;
  void clear_nframeseq();
  static const int kNFrameSeqFieldNumber = 1;
  ::google::protobuf::int64 nframeseq() const;
  void set_nframeseq(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:tagAIAction)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr byaiactionbuff_;
  ::google::protobuf::int64 nframeseq_;
  mutable int _cached_size_;
  friend struct  protobuf_common_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tagServiceState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tagServiceState) */ {
 public:
  tagServiceState();
  virtual ~tagServiceState();

  tagServiceState(const tagServiceState& from);

  inline tagServiceState& operator=(const tagServiceState& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagServiceState& default_instance();

  static inline const tagServiceState* internal_default_instance() {
    return reinterpret_cast<const tagServiceState*>(
               &_tagServiceState_default_instance_);
  }

  void Swap(tagServiceState* other);

  // implements Message ----------------------------------------------

  inline tagServiceState* New() const PROTOBUF_FINAL { return New(NULL); }

  tagServiceState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tagServiceState& from);
  void MergeFrom(const tagServiceState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tagServiceState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 nServiceState = 1;
  void clear_nservicestate();
  static const int kNServiceStateFieldNumber = 1;
  ::google::protobuf::int32 nservicestate() const;
  void set_nservicestate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tagServiceState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 nservicestate_;
  mutable int _cached_size_;
  friend struct  protobuf_common_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tagChangeGameState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tagChangeGameState) */ {
 public:
  tagChangeGameState();
  virtual ~tagChangeGameState();

  tagChangeGameState(const tagChangeGameState& from);

  inline tagChangeGameState& operator=(const tagChangeGameState& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagChangeGameState& default_instance();

  static inline const tagChangeGameState* internal_default_instance() {
    return reinterpret_cast<const tagChangeGameState*>(
               &_tagChangeGameState_default_instance_);
  }

  void Swap(tagChangeGameState* other);

  // implements Message ----------------------------------------------

  inline tagChangeGameState* New() const PROTOBUF_FINAL { return New(NULL); }

  tagChangeGameState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tagChangeGameState& from);
  void MergeFrom(const tagChangeGameState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tagChangeGameState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .GAMESTATEENUM eGameState = 1;
  void clear_egamestate();
  static const int kEGameStateFieldNumber = 1;
  ::GAMESTATEENUM egamestate() const;
  void set_egamestate(::GAMESTATEENUM value);

  // @@protoc_insertion_point(class_scope:tagChangeGameState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int egamestate_;
  mutable int _cached_size_;
  friend struct  protobuf_common_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tagAgentState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tagAgentState) */ {
 public:
  tagAgentState();
  virtual ~tagAgentState();

  tagAgentState(const tagAgentState& from);

  inline tagAgentState& operator=(const tagAgentState& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagAgentState& default_instance();

  static inline const tagAgentState* internal_default_instance() {
    return reinterpret_cast<const tagAgentState*>(
               &_tagAgentState_default_instance_);
  }

  void Swap(tagAgentState* other);

  // implements Message ----------------------------------------------

  inline tagAgentState* New() const PROTOBUF_FINAL { return New(NULL); }

  tagAgentState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tagAgentState& from);
  void MergeFrom(const tagAgentState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tagAgentState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strAgentState = 2;
  void clear_stragentstate();
  static const int kStrAgentStateFieldNumber = 2;
  const ::std::string& stragentstate() const;
  void set_stragentstate(const ::std::string& value);
  #if LANG_CXX11
  void set_stragentstate(::std::string&& value);
  #endif
  void set_stragentstate(const char* value);
  void set_stragentstate(const char* value, size_t size);
  ::std::string* mutable_stragentstate();
  ::std::string* release_stragentstate();
  void set_allocated_stragentstate(::std::string* stragentstate);

  // int32 eAgentState = 1;
  void clear_eagentstate();
  static const int kEAgentStateFieldNumber = 1;
  ::google::protobuf::int32 eagentstate() const;
  void set_eagentstate(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tagAgentState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr stragentstate_;
  ::google::protobuf::int32 eagentstate_;
  mutable int _cached_size_;
  friend struct  protobuf_common_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tagIMTrainState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tagIMTrainState) */ {
 public:
  tagIMTrainState();
  virtual ~tagIMTrainState();

  tagIMTrainState(const tagIMTrainState& from);

  inline tagIMTrainState& operator=(const tagIMTrainState& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagIMTrainState& default_instance();

  static inline const tagIMTrainState* internal_default_instance() {
    return reinterpret_cast<const tagIMTrainState*>(
               &_tagIMTrainState_default_instance_);
  }

  void Swap(tagIMTrainState* other);

  // implements Message ----------------------------------------------

  inline tagIMTrainState* New() const PROTOBUF_FINAL { return New(NULL); }

  tagIMTrainState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tagIMTrainState& from);
  void MergeFrom(const tagIMTrainState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tagIMTrainState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 nProgress = 1;
  void clear_nprogress();
  static const int kNProgressFieldNumber = 1;
  ::google::protobuf::int32 nprogress() const;
  void set_nprogress(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tagIMTrainState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 nprogress_;
  mutable int _cached_size_;
  friend struct  protobuf_common_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tagRestartResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tagRestartResult) */ {
 public:
  tagRestartResult();
  virtual ~tagRestartResult();

  tagRestartResult(const tagRestartResult& from);

  inline tagRestartResult& operator=(const tagRestartResult& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagRestartResult& default_instance();

  static inline const tagRestartResult* internal_default_instance() {
    return reinterpret_cast<const tagRestartResult*>(
               &_tagRestartResult_default_instance_);
  }

  void Swap(tagRestartResult* other);

  // implements Message ----------------------------------------------

  inline tagRestartResult* New() const PROTOBUF_FINAL { return New(NULL); }

  tagRestartResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tagRestartResult& from);
  void MergeFrom(const tagRestartResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tagRestartResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ERESTARTRESULTENUM eRestartResult = 1;
  void clear_erestartresult();
  static const int kERestartResultFieldNumber = 1;
  ::ERESTARTRESULTENUM erestartresult() const;
  void set_erestartresult(::ERESTARTRESULTENUM value);

  // @@protoc_insertion_point(class_scope:tagRestartResult)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int erestartresult_;
  mutable int _cached_size_;
  friend struct  protobuf_common_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tagNewTask : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tagNewTask) */ {
 public:
  tagNewTask();
  virtual ~tagNewTask();

  tagNewTask(const tagNewTask& from);

  inline tagNewTask& operator=(const tagNewTask& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagNewTask& default_instance();

  static inline const tagNewTask* internal_default_instance() {
    return reinterpret_cast<const tagNewTask*>(
               &_tagNewTask_default_instance_);
  }

  void Swap(tagNewTask* other);

  // implements Message ----------------------------------------------

  inline tagNewTask* New() const PROTOBUF_FINAL { return New(NULL); }

  tagNewTask* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tagNewTask& from);
  void MergeFrom(const tagNewTask& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tagNewTask* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strTaskID = 1;
  void clear_strtaskid();
  static const int kStrTaskIDFieldNumber = 1;
  const ::std::string& strtaskid() const;
  void set_strtaskid(const ::std::string& value);
  #if LANG_CXX11
  void set_strtaskid(::std::string&& value);
  #endif
  void set_strtaskid(const char* value);
  void set_strtaskid(const char* value, size_t size);
  ::std::string* mutable_strtaskid();
  ::std::string* release_strtaskid();
  void set_allocated_strtaskid(::std::string* strtaskid);

  // string strGameVersion = 4;
  void clear_strgameversion();
  static const int kStrGameVersionFieldNumber = 4;
  const ::std::string& strgameversion() const;
  void set_strgameversion(const ::std::string& value);
  #if LANG_CXX11
  void set_strgameversion(::std::string&& value);
  #endif
  void set_strgameversion(const char* value);
  void set_strgameversion(const char* value, size_t size);
  ::std::string* mutable_strgameversion();
  ::std::string* release_strgameversion();
  void set_allocated_strgameversion(::std::string* strgameversion);

  // int32 nGameID = 2;
  void clear_ngameid();
  static const int kNGameIDFieldNumber = 2;
  ::google::protobuf::int32 ngameid() const;
  void set_ngameid(::google::protobuf::int32 value);

  // int32 nSceneID = 3;
  void clear_nsceneid();
  static const int kNSceneIDFieldNumber = 3;
  ::google::protobuf::int32 nsceneid() const;
  void set_nsceneid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tagNewTask)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strtaskid_;
  ::google::protobuf::internal::ArenaStringPtr strgameversion_;
  ::google::protobuf::int32 ngameid_;
  ::google::protobuf::int32 nsceneid_;
  mutable int _cached_size_;
  friend struct  protobuf_common_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tagTestID : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tagTestID) */ {
 public:
  tagTestID();
  virtual ~tagTestID();

  tagTestID(const tagTestID& from);

  inline tagTestID& operator=(const tagTestID& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagTestID& default_instance();

  static inline const tagTestID* internal_default_instance() {
    return reinterpret_cast<const tagTestID*>(
               &_tagTestID_default_instance_);
  }

  void Swap(tagTestID* other);

  // implements Message ----------------------------------------------

  inline tagTestID* New() const PROTOBUF_FINAL { return New(NULL); }

  tagTestID* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tagTestID& from);
  void MergeFrom(const tagTestID& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tagTestID* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string strTestID = 1;
  void clear_strtestid();
  static const int kStrTestIDFieldNumber = 1;
  const ::std::string& strtestid() const;
  void set_strtestid(const ::std::string& value);
  #if LANG_CXX11
  void set_strtestid(::std::string&& value);
  #endif
  void set_strtestid(const char* value);
  void set_strtestid(const char* value, size_t size);
  ::std::string* mutable_strtestid();
  ::std::string* release_strtestid();
  void set_allocated_strtestid(::std::string* strtestid);

  // string strGameVersion = 3;
  void clear_strgameversion();
  static const int kStrGameVersionFieldNumber = 3;
  const ::std::string& strgameversion() const;
  void set_strgameversion(const ::std::string& value);
  #if LANG_CXX11
  void set_strgameversion(::std::string&& value);
  #endif
  void set_strgameversion(const char* value);
  void set_strgameversion(const char* value, size_t size);
  ::std::string* mutable_strgameversion();
  ::std::string* release_strgameversion();
  void set_allocated_strgameversion(::std::string* strgameversion);

  // int32 nGameID = 2;
  void clear_ngameid();
  static const int kNGameIDFieldNumber = 2;
  ::google::protobuf::int32 ngameid() const;
  void set_ngameid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:tagTestID)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr strtestid_;
  ::google::protobuf::internal::ArenaStringPtr strgameversion_;
  ::google::protobuf::int32 ngameid_;
  mutable int _cached_size_;
  friend struct  protobuf_common_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class tagMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:tagMessage) */ {
 public:
  tagMessage();
  virtual ~tagMessage();

  tagMessage(const tagMessage& from);

  inline tagMessage& operator=(const tagMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tagMessage& default_instance();

  static inline const tagMessage* internal_default_instance() {
    return reinterpret_cast<const tagMessage*>(
               &_tagMessage_default_instance_);
  }

  void Swap(tagMessage* other);

  // implements Message ----------------------------------------------

  inline tagMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  tagMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const tagMessage& from);
  void MergeFrom(const tagMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(tagMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .tagServiceRegister stServiceRegister = 2;
  bool has_stserviceregister() const;
  void clear_stserviceregister();
  static const int kStServiceRegisterFieldNumber = 2;
  const ::tagServiceRegister& stserviceregister() const;
  ::tagServiceRegister* mutable_stserviceregister();
  ::tagServiceRegister* release_stserviceregister();
  void set_allocated_stserviceregister(::tagServiceRegister* stserviceregister);

  // .tagTaskReport stTaskReport = 3;
  bool has_sttaskreport() const;
  void clear_sttaskreport();
  static const int kStTaskReportFieldNumber = 3;
  const ::tagTaskReport& sttaskreport() const;
  ::tagTaskReport* mutable_sttaskreport();
  ::tagTaskReport* release_sttaskreport();
  void set_allocated_sttaskreport(::tagTaskReport* sttaskreport);

  // .tagSrcImageInfo stSrcImageInfo = 4;
  bool has_stsrcimageinfo() const;
  void clear_stsrcimageinfo();
  static const int kStSrcImageInfoFieldNumber = 4;
  const ::tagSrcImageInfo& stsrcimageinfo() const;
  ::tagSrcImageInfo* mutable_stsrcimageinfo();
  ::tagSrcImageInfo* release_stsrcimageinfo();
  void set_allocated_stsrcimageinfo(::tagSrcImageInfo* stsrcimageinfo);

  // .tagUIAPIState stUIAPIState = 9;
  bool has_stuiapistate() const;
  void clear_stuiapistate();
  static const int kStUIAPIStateFieldNumber = 9;
  const ::tagUIAPIState& stuiapistate() const;
  ::tagUIAPIState* mutable_stuiapistate();
  ::tagUIAPIState* release_stuiapistate();
  void set_allocated_stuiapistate(::tagUIAPIState* stuiapistate);

  // .tagUIAction stUIAction = 10;
  bool has_stuiaction() const;
  void clear_stuiaction();
  static const int kStUIActionFieldNumber = 10;
  const ::tagUIAction& stuiaction() const;
  ::tagUIAction* mutable_stuiaction();
  ::tagUIAction* release_stuiaction();
  void set_allocated_stuiaction(::tagUIAction* stuiaction);

  // .tagAIAction stAIAction = 12;
  bool has_staiaction() const;
  void clear_staiaction();
  static const int kStAIActionFieldNumber = 12;
  const ::tagAIAction& staiaction() const;
  ::tagAIAction* mutable_staiaction();
  ::tagAIAction* release_staiaction();
  void set_allocated_staiaction(::tagAIAction* staiaction);

  // .tagServiceState stServiceState = 13;
  bool has_stservicestate() const;
  void clear_stservicestate();
  static const int kStServiceStateFieldNumber = 13;
  const ::tagServiceState& stservicestate() const;
  ::tagServiceState* mutable_stservicestate();
  ::tagServiceState* release_stservicestate();
  void set_allocated_stservicestate(::tagServiceState* stservicestate);

  // .tagChangeGameState stChangeGameState = 14;
  bool has_stchangegamestate() const;
  void clear_stchangegamestate();
  static const int kStChangeGameStateFieldNumber = 14;
  const ::tagChangeGameState& stchangegamestate() const;
  ::tagChangeGameState* mutable_stchangegamestate();
  ::tagChangeGameState* release_stchangegamestate();
  void set_allocated_stchangegamestate(::tagChangeGameState* stchangegamestate);

  // .tagAgentState stAgentState = 15;
  bool has_stagentstate() const;
  void clear_stagentstate();
  static const int kStAgentStateFieldNumber = 15;
  const ::tagAgentState& stagentstate() const;
  ::tagAgentState* mutable_stagentstate();
  ::tagAgentState* release_stagentstate();
  void set_allocated_stagentstate(::tagAgentState* stagentstate);

  // .tagRestartResult stRestartResult = 16;
  bool has_strestartresult() const;
  void clear_strestartresult();
  static const int kStRestartResultFieldNumber = 16;
  const ::tagRestartResult& strestartresult() const;
  ::tagRestartResult* mutable_strestartresult();
  ::tagRestartResult* release_strestartresult();
  void set_allocated_strestartresult(::tagRestartResult* strestartresult);

  // .tagNewTask stNewTask = 17;
  bool has_stnewtask() const;
  void clear_stnewtask();
  static const int kStNewTaskFieldNumber = 17;
  const ::tagNewTask& stnewtask() const;
  ::tagNewTask* mutable_stnewtask();
  ::tagNewTask* release_stnewtask();
  void set_allocated_stnewtask(::tagNewTask* stnewtask);

  // .tagTestID stTestID = 18;
  bool has_sttestid() const;
  void clear_sttestid();
  static const int kStTestIDFieldNumber = 18;
  const ::tagTestID& sttestid() const;
  ::tagTestID* mutable_sttestid();
  ::tagTestID* release_sttestid();
  void set_allocated_sttestid(::tagTestID* sttestid);

  // .tagPBAgentMsg stPBAgentMsg = 19;
  bool has_stpbagentmsg() const;
  void clear_stpbagentmsg();
  static const int kStPBAgentMsgFieldNumber = 19;
  const ::tagPBAgentMsg& stpbagentmsg() const;
  ::tagPBAgentMsg* mutable_stpbagentmsg();
  ::tagPBAgentMsg* release_stpbagentmsg();
  void set_allocated_stpbagentmsg(::tagPBAgentMsg* stpbagentmsg);

  // .tagIMTrainState stIMTrainState = 20;
  bool has_stimtrainstate() const;
  void clear_stimtrainstate();
  static const int kStIMTrainStateFieldNumber = 20;
  const ::tagIMTrainState& stimtrainstate() const;
  ::tagIMTrainState* mutable_stimtrainstate();
  ::tagIMTrainState* release_stimtrainstate();
  void set_allocated_stimtrainstate(::tagIMTrainState* stimtrainstate);

  // .EMSGIDENUM eMsgID = 1;
  void clear_emsgid();
  static const int kEMsgIDFieldNumber = 1;
  ::EMSGIDENUM emsgid() const;
  void set_emsgid(::EMSGIDENUM value);

  // @@protoc_insertion_point(class_scope:tagMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::tagServiceRegister* stserviceregister_;
  ::tagTaskReport* sttaskreport_;
  ::tagSrcImageInfo* stsrcimageinfo_;
  ::tagUIAPIState* stuiapistate_;
  ::tagUIAction* stuiaction_;
  ::tagAIAction* staiaction_;
  ::tagServiceState* stservicestate_;
  ::tagChangeGameState* stchangegamestate_;
  ::tagAgentState* stagentstate_;
  ::tagRestartResult* strestartresult_;
  ::tagNewTask* stnewtask_;
  ::tagTestID* sttestid_;
  ::tagPBAgentMsg* stpbagentmsg_;
  ::tagIMTrainState* stimtrainstate_;
  int emsgid_;
  mutable int _cached_size_;
  friend struct  protobuf_common_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// tagSrcImageInfo

// fixed64 uFrameSeq = 1;
inline void tagSrcImageInfo::clear_uframeseq() {
  uframeseq_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 tagSrcImageInfo::uframeseq() const {
  // @@protoc_insertion_point(field_get:tagSrcImageInfo.uFrameSeq)
  return uframeseq_;
}
inline void tagSrcImageInfo::set_uframeseq(::google::protobuf::uint64 value) {
  
  uframeseq_ = value;
  // @@protoc_insertion_point(field_set:tagSrcImageInfo.uFrameSeq)
}

// int32 nWidth = 2;
inline void tagSrcImageInfo::clear_nwidth() {
  nwidth_ = 0;
}
inline ::google::protobuf::int32 tagSrcImageInfo::nwidth() const {
  // @@protoc_insertion_point(field_get:tagSrcImageInfo.nWidth)
  return nwidth_;
}
inline void tagSrcImageInfo::set_nwidth(::google::protobuf::int32 value) {
  
  nwidth_ = value;
  // @@protoc_insertion_point(field_set:tagSrcImageInfo.nWidth)
}

// int32 nHeight = 3;
inline void tagSrcImageInfo::clear_nheight() {
  nheight_ = 0;
}
inline ::google::protobuf::int32 tagSrcImageInfo::nheight() const {
  // @@protoc_insertion_point(field_get:tagSrcImageInfo.nHeight)
  return nheight_;
}
inline void tagSrcImageInfo::set_nheight(::google::protobuf::int32 value) {
  
  nheight_ = value;
  // @@protoc_insertion_point(field_set:tagSrcImageInfo.nHeight)
}

// bytes byImageData = 4;
inline void tagSrcImageInfo::clear_byimagedata() {
  byimagedata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& tagSrcImageInfo::byimagedata() const {
  // @@protoc_insertion_point(field_get:tagSrcImageInfo.byImageData)
  return byimagedata_.GetNoArena();
}
inline void tagSrcImageInfo::set_byimagedata(const ::std::string& value) {
  
  byimagedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tagSrcImageInfo.byImageData)
}
#if LANG_CXX11
inline void tagSrcImageInfo::set_byimagedata(::std::string&& value) {
  
  byimagedata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tagSrcImageInfo.byImageData)
}
#endif
inline void tagSrcImageInfo::set_byimagedata(const char* value) {
  
  byimagedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tagSrcImageInfo.byImageData)
}
inline void tagSrcImageInfo::set_byimagedata(const void* value, size_t size) {
  
  byimagedata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tagSrcImageInfo.byImageData)
}
inline ::std::string* tagSrcImageInfo::mutable_byimagedata() {
  
  // @@protoc_insertion_point(field_mutable:tagSrcImageInfo.byImageData)
  return byimagedata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* tagSrcImageInfo::release_byimagedata() {
  // @@protoc_insertion_point(field_release:tagSrcImageInfo.byImageData)
  
  return byimagedata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void tagSrcImageInfo::set_allocated_byimagedata(::std::string* byimagedata) {
  if (byimagedata != NULL) {
    
  } else {
    
  }
  byimagedata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), byimagedata);
  // @@protoc_insertion_point(field_set_allocated:tagSrcImageInfo.byImageData)
}

// fixed64 uDeviceIndex = 5;
inline void tagSrcImageInfo::clear_udeviceindex() {
  udeviceindex_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 tagSrcImageInfo::udeviceindex() const {
  // @@protoc_insertion_point(field_get:tagSrcImageInfo.uDeviceIndex)
  return udeviceindex_;
}
inline void tagSrcImageInfo::set_udeviceindex(::google::protobuf::uint64 value) {
  
  udeviceindex_ = value;
  // @@protoc_insertion_point(field_set:tagSrcImageInfo.uDeviceIndex)
}

// string strJsonData = 6;
inline void tagSrcImageInfo::clear_strjsondata() {
  strjsondata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& tagSrcImageInfo::strjsondata() const {
  // @@protoc_insertion_point(field_get:tagSrcImageInfo.strJsonData)
  return strjsondata_.GetNoArena();
}
inline void tagSrcImageInfo::set_strjsondata(const ::std::string& value) {
  
  strjsondata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tagSrcImageInfo.strJsonData)
}
#if LANG_CXX11
inline void tagSrcImageInfo::set_strjsondata(::std::string&& value) {
  
  strjsondata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tagSrcImageInfo.strJsonData)
}
#endif
inline void tagSrcImageInfo::set_strjsondata(const char* value) {
  
  strjsondata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tagSrcImageInfo.strJsonData)
}
inline void tagSrcImageInfo::set_strjsondata(const char* value, size_t size) {
  
  strjsondata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tagSrcImageInfo.strJsonData)
}
inline ::std::string* tagSrcImageInfo::mutable_strjsondata() {
  
  // @@protoc_insertion_point(field_mutable:tagSrcImageInfo.strJsonData)
  return strjsondata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* tagSrcImageInfo::release_strjsondata() {
  // @@protoc_insertion_point(field_release:tagSrcImageInfo.strJsonData)
  
  return strjsondata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void tagSrcImageInfo::set_allocated_strjsondata(::std::string* strjsondata) {
  if (strjsondata != NULL) {
    
  } else {
    
  }
  strjsondata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strjsondata);
  // @@protoc_insertion_point(field_set_allocated:tagSrcImageInfo.strJsonData)
}

// -------------------------------------------------------------------

// tagServiceRegister

// .ESERVICEREGISTERENUM eRegisterType = 1;
inline void tagServiceRegister::clear_eregistertype() {
  eregistertype_ = 0;
}
inline ::ESERVICEREGISTERENUM tagServiceRegister::eregistertype() const {
  // @@protoc_insertion_point(field_get:tagServiceRegister.eRegisterType)
  return static_cast< ::ESERVICEREGISTERENUM >(eregistertype_);
}
inline void tagServiceRegister::set_eregistertype(::ESERVICEREGISTERENUM value) {
  
  eregistertype_ = value;
  // @@protoc_insertion_point(field_set:tagServiceRegister.eRegisterType)
}

// .ESERVICETYPEENUM eServiceType = 2;
inline void tagServiceRegister::clear_eservicetype() {
  eservicetype_ = 0;
}
inline ::ESERVICETYPEENUM tagServiceRegister::eservicetype() const {
  // @@protoc_insertion_point(field_get:tagServiceRegister.eServiceType)
  return static_cast< ::ESERVICETYPEENUM >(eservicetype_);
}
inline void tagServiceRegister::set_eservicetype(::ESERVICETYPEENUM value) {
  
  eservicetype_ = value;
  // @@protoc_insertion_point(field_set:tagServiceRegister.eServiceType)
}

// -------------------------------------------------------------------

// tagTaskReport

// .ETASKSTATUSENUM eTaskStatus = 1;
inline void tagTaskReport::clear_etaskstatus() {
  etaskstatus_ = 0;
}
inline ::ETASKSTATUSENUM tagTaskReport::etaskstatus() const {
  // @@protoc_insertion_point(field_get:tagTaskReport.eTaskStatus)
  return static_cast< ::ETASKSTATUSENUM >(etaskstatus_);
}
inline void tagTaskReport::set_etaskstatus(::ETASKSTATUSENUM value) {
  
  etaskstatus_ = value;
  // @@protoc_insertion_point(field_set:tagTaskReport.eTaskStatus)
}

// -------------------------------------------------------------------

// tagUIPoint

// int32 nX = 1;
inline void tagUIPoint::clear_nx() {
  nx_ = 0;
}
inline ::google::protobuf::int32 tagUIPoint::nx() const {
  // @@protoc_insertion_point(field_get:tagUIPoint.nX)
  return nx_;
}
inline void tagUIPoint::set_nx(::google::protobuf::int32 value) {
  
  nx_ = value;
  // @@protoc_insertion_point(field_set:tagUIPoint.nX)
}

// int32 nY = 2;
inline void tagUIPoint::clear_ny() {
  ny_ = 0;
}
inline ::google::protobuf::int32 tagUIPoint::ny() const {
  // @@protoc_insertion_point(field_get:tagUIPoint.nY)
  return ny_;
}
inline void tagUIPoint::set_ny(::google::protobuf::int32 value) {
  
  ny_ = value;
  // @@protoc_insertion_point(field_set:tagUIPoint.nY)
}

// -------------------------------------------------------------------

// tagUIUnitAction

// string strText = 1;
inline void tagUIUnitAction::clear_strtext() {
  strtext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& tagUIUnitAction::strtext() const {
  // @@protoc_insertion_point(field_get:tagUIUnitAction.strText)
  return strtext_.GetNoArena();
}
inline void tagUIUnitAction::set_strtext(const ::std::string& value) {
  
  strtext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tagUIUnitAction.strText)
}
#if LANG_CXX11
inline void tagUIUnitAction::set_strtext(::std::string&& value) {
  
  strtext_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tagUIUnitAction.strText)
}
#endif
inline void tagUIUnitAction::set_strtext(const char* value) {
  
  strtext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tagUIUnitAction.strText)
}
inline void tagUIUnitAction::set_strtext(const char* value, size_t size) {
  
  strtext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tagUIUnitAction.strText)
}
inline ::std::string* tagUIUnitAction::mutable_strtext() {
  
  // @@protoc_insertion_point(field_mutable:tagUIUnitAction.strText)
  return strtext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* tagUIUnitAction::release_strtext() {
  // @@protoc_insertion_point(field_release:tagUIUnitAction.strText)
  
  return strtext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void tagUIUnitAction::set_allocated_strtext(::std::string* strtext) {
  if (strtext != NULL) {
    
  } else {
    
  }
  strtext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strtext);
  // @@protoc_insertion_point(field_set_allocated:tagUIUnitAction.strText)
}

// .EUIAPIACTIONENUM eUIAction = 2;
inline void tagUIUnitAction::clear_euiaction() {
  euiaction_ = 0;
}
inline ::EUIAPIACTIONENUM tagUIUnitAction::euiaction() const {
  // @@protoc_insertion_point(field_get:tagUIUnitAction.eUIAction)
  return static_cast< ::EUIAPIACTIONENUM >(euiaction_);
}
inline void tagUIUnitAction::set_euiaction(::EUIAPIACTIONENUM value) {
  
  euiaction_ = value;
  // @@protoc_insertion_point(field_set:tagUIUnitAction.eUIAction)
}

// .tagUIPoint stClickPoint = 3;
inline bool tagUIUnitAction::has_stclickpoint() const {
  return this != internal_default_instance() && stclickpoint_ != NULL;
}
inline void tagUIUnitAction::clear_stclickpoint() {
  if (GetArenaNoVirtual() == NULL && stclickpoint_ != NULL) delete stclickpoint_;
  stclickpoint_ = NULL;
}
inline const ::tagUIPoint& tagUIUnitAction::stclickpoint() const {
  // @@protoc_insertion_point(field_get:tagUIUnitAction.stClickPoint)
  return stclickpoint_ != NULL ? *stclickpoint_
                         : *::tagUIPoint::internal_default_instance();
}
inline ::tagUIPoint* tagUIUnitAction::mutable_stclickpoint() {
  
  if (stclickpoint_ == NULL) {
    stclickpoint_ = new ::tagUIPoint;
  }
  // @@protoc_insertion_point(field_mutable:tagUIUnitAction.stClickPoint)
  return stclickpoint_;
}
inline ::tagUIPoint* tagUIUnitAction::release_stclickpoint() {
  // @@protoc_insertion_point(field_release:tagUIUnitAction.stClickPoint)
  
  ::tagUIPoint* temp = stclickpoint_;
  stclickpoint_ = NULL;
  return temp;
}
inline void tagUIUnitAction::set_allocated_stclickpoint(::tagUIPoint* stclickpoint) {
  delete stclickpoint_;
  stclickpoint_ = stclickpoint;
  if (stclickpoint) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tagUIUnitAction.stClickPoint)
}

// repeated .tagUIPoint stDragPoints = 4;
inline int tagUIUnitAction::stdragpoints_size() const {
  return stdragpoints_.size();
}
inline void tagUIUnitAction::clear_stdragpoints() {
  stdragpoints_.Clear();
}
inline const ::tagUIPoint& tagUIUnitAction::stdragpoints(int index) const {
  // @@protoc_insertion_point(field_get:tagUIUnitAction.stDragPoints)
  return stdragpoints_.Get(index);
}
inline ::tagUIPoint* tagUIUnitAction::mutable_stdragpoints(int index) {
  // @@protoc_insertion_point(field_mutable:tagUIUnitAction.stDragPoints)
  return stdragpoints_.Mutable(index);
}
inline ::tagUIPoint* tagUIUnitAction::add_stdragpoints() {
  // @@protoc_insertion_point(field_add:tagUIUnitAction.stDragPoints)
  return stdragpoints_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::tagUIPoint >*
tagUIUnitAction::mutable_stdragpoints() {
  // @@protoc_insertion_point(field_mutable_list:tagUIUnitAction.stDragPoints)
  return &stdragpoints_;
}
inline const ::google::protobuf::RepeatedPtrField< ::tagUIPoint >&
tagUIUnitAction::stdragpoints() const {
  // @@protoc_insertion_point(field_list:tagUIUnitAction.stDragPoints)
  return stdragpoints_;
}

// int32 nDuringTimeMs = 5;
inline void tagUIUnitAction::clear_nduringtimems() {
  nduringtimems_ = 0;
}
inline ::google::protobuf::int32 tagUIUnitAction::nduringtimems() const {
  // @@protoc_insertion_point(field_get:tagUIUnitAction.nDuringTimeMs)
  return nduringtimems_;
}
inline void tagUIUnitAction::set_nduringtimems(::google::protobuf::int32 value) {
  
  nduringtimems_ = value;
  // @@protoc_insertion_point(field_set:tagUIUnitAction.nDuringTimeMs)
}

// int32 nSleepTimeMs = 6;
inline void tagUIUnitAction::clear_nsleeptimems() {
  nsleeptimems_ = 0;
}
inline ::google::protobuf::int32 tagUIUnitAction::nsleeptimems() const {
  // @@protoc_insertion_point(field_get:tagUIUnitAction.nSleepTimeMs)
  return nsleeptimems_;
}
inline void tagUIUnitAction::set_nsleeptimems(::google::protobuf::int32 value) {
  
  nsleeptimems_ = value;
  // @@protoc_insertion_point(field_set:tagUIUnitAction.nSleepTimeMs)
}

// -------------------------------------------------------------------

// tagUIAction

// .GAMESTATEENUM eGameState = 1;
inline void tagUIAction::clear_egamestate() {
  egamestate_ = 0;
}
inline ::GAMESTATEENUM tagUIAction::egamestate() const {
  // @@protoc_insertion_point(field_get:tagUIAction.eGameState)
  return static_cast< ::GAMESTATEENUM >(egamestate_);
}
inline void tagUIAction::set_egamestate(::GAMESTATEENUM value) {
  
  egamestate_ = value;
  // @@protoc_insertion_point(field_set:tagUIAction.eGameState)
}

// .tagSrcImageInfo stSrcImageInfo = 2;
inline bool tagUIAction::has_stsrcimageinfo() const {
  return this != internal_default_instance() && stsrcimageinfo_ != NULL;
}
inline void tagUIAction::clear_stsrcimageinfo() {
  if (GetArenaNoVirtual() == NULL && stsrcimageinfo_ != NULL) delete stsrcimageinfo_;
  stsrcimageinfo_ = NULL;
}
inline const ::tagSrcImageInfo& tagUIAction::stsrcimageinfo() const {
  // @@protoc_insertion_point(field_get:tagUIAction.stSrcImageInfo)
  return stsrcimageinfo_ != NULL ? *stsrcimageinfo_
                         : *::tagSrcImageInfo::internal_default_instance();
}
inline ::tagSrcImageInfo* tagUIAction::mutable_stsrcimageinfo() {
  
  if (stsrcimageinfo_ == NULL) {
    stsrcimageinfo_ = new ::tagSrcImageInfo;
  }
  // @@protoc_insertion_point(field_mutable:tagUIAction.stSrcImageInfo)
  return stsrcimageinfo_;
}
inline ::tagSrcImageInfo* tagUIAction::release_stsrcimageinfo() {
  // @@protoc_insertion_point(field_release:tagUIAction.stSrcImageInfo)
  
  ::tagSrcImageInfo* temp = stsrcimageinfo_;
  stsrcimageinfo_ = NULL;
  return temp;
}
inline void tagUIAction::set_allocated_stsrcimageinfo(::tagSrcImageInfo* stsrcimageinfo) {
  delete stsrcimageinfo_;
  stsrcimageinfo_ = stsrcimageinfo;
  if (stsrcimageinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tagUIAction.stSrcImageInfo)
}

// repeated .tagUIUnitAction stUIUnitAction = 3;
inline int tagUIAction::stuiunitaction_size() const {
  return stuiunitaction_.size();
}
inline void tagUIAction::clear_stuiunitaction() {
  stuiunitaction_.Clear();
}
inline const ::tagUIUnitAction& tagUIAction::stuiunitaction(int index) const {
  // @@protoc_insertion_point(field_get:tagUIAction.stUIUnitAction)
  return stuiunitaction_.Get(index);
}
inline ::tagUIUnitAction* tagUIAction::mutable_stuiunitaction(int index) {
  // @@protoc_insertion_point(field_mutable:tagUIAction.stUIUnitAction)
  return stuiunitaction_.Mutable(index);
}
inline ::tagUIUnitAction* tagUIAction::add_stuiunitaction() {
  // @@protoc_insertion_point(field_add:tagUIAction.stUIUnitAction)
  return stuiunitaction_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::tagUIUnitAction >*
tagUIAction::mutable_stuiunitaction() {
  // @@protoc_insertion_point(field_mutable_list:tagUIAction.stUIUnitAction)
  return &stuiunitaction_;
}
inline const ::google::protobuf::RepeatedPtrField< ::tagUIUnitAction >&
tagUIAction::stuiunitaction() const {
  // @@protoc_insertion_point(field_list:tagUIAction.stUIUnitAction)
  return stuiunitaction_;
}

// int32 nUIID = 4;
inline void tagUIAction::clear_nuiid() {
  nuiid_ = 0;
}
inline ::google::protobuf::int32 tagUIAction::nuiid() const {
  // @@protoc_insertion_point(field_get:tagUIAction.nUIID)
  return nuiid_;
}
inline void tagUIAction::set_nuiid(::google::protobuf::int32 value) {
  
  nuiid_ = value;
  // @@protoc_insertion_point(field_set:tagUIAction.nUIID)
}

// -------------------------------------------------------------------

// tagUIAPIState

// .EUIAPISTATEENUM eUIState = 1;
inline void tagUIAPIState::clear_euistate() {
  euistate_ = 0;
}
inline ::EUIAPISTATEENUM tagUIAPIState::euistate() const {
  // @@protoc_insertion_point(field_get:tagUIAPIState.eUIState)
  return static_cast< ::EUIAPISTATEENUM >(euistate_);
}
inline void tagUIAPIState::set_euistate(::EUIAPISTATEENUM value) {
  
  euistate_ = value;
  // @@protoc_insertion_point(field_set:tagUIAPIState.eUIState)
}

// .tagSrcImageInfo stUIImage = 2;
inline bool tagUIAPIState::has_stuiimage() const {
  return this != internal_default_instance() && stuiimage_ != NULL;
}
inline void tagUIAPIState::clear_stuiimage() {
  if (GetArenaNoVirtual() == NULL && stuiimage_ != NULL) delete stuiimage_;
  stuiimage_ = NULL;
}
inline const ::tagSrcImageInfo& tagUIAPIState::stuiimage() const {
  // @@protoc_insertion_point(field_get:tagUIAPIState.stUIImage)
  return stuiimage_ != NULL ? *stuiimage_
                         : *::tagSrcImageInfo::internal_default_instance();
}
inline ::tagSrcImageInfo* tagUIAPIState::mutable_stuiimage() {
  
  if (stuiimage_ == NULL) {
    stuiimage_ = new ::tagSrcImageInfo;
  }
  // @@protoc_insertion_point(field_mutable:tagUIAPIState.stUIImage)
  return stuiimage_;
}
inline ::tagSrcImageInfo* tagUIAPIState::release_stuiimage() {
  // @@protoc_insertion_point(field_release:tagUIAPIState.stUIImage)
  
  ::tagSrcImageInfo* temp = stuiimage_;
  stuiimage_ = NULL;
  return temp;
}
inline void tagUIAPIState::set_allocated_stuiimage(::tagSrcImageInfo* stuiimage) {
  delete stuiimage_;
  stuiimage_ = stuiimage;
  if (stuiimage) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tagUIAPIState.stUIImage)
}

// .tagUIAction stUIAction = 3;
inline bool tagUIAPIState::has_stuiaction() const {
  return this != internal_default_instance() && stuiaction_ != NULL;
}
inline void tagUIAPIState::clear_stuiaction() {
  if (GetArenaNoVirtual() == NULL && stuiaction_ != NULL) delete stuiaction_;
  stuiaction_ = NULL;
}
inline const ::tagUIAction& tagUIAPIState::stuiaction() const {
  // @@protoc_insertion_point(field_get:tagUIAPIState.stUIAction)
  return stuiaction_ != NULL ? *stuiaction_
                         : *::tagUIAction::internal_default_instance();
}
inline ::tagUIAction* tagUIAPIState::mutable_stuiaction() {
  
  if (stuiaction_ == NULL) {
    stuiaction_ = new ::tagUIAction;
  }
  // @@protoc_insertion_point(field_mutable:tagUIAPIState.stUIAction)
  return stuiaction_;
}
inline ::tagUIAction* tagUIAPIState::release_stuiaction() {
  // @@protoc_insertion_point(field_release:tagUIAPIState.stUIAction)
  
  ::tagUIAction* temp = stuiaction_;
  stuiaction_ = NULL;
  return temp;
}
inline void tagUIAPIState::set_allocated_stuiaction(::tagUIAction* stuiaction) {
  delete stuiaction_;
  stuiaction_ = stuiaction;
  if (stuiaction) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tagUIAPIState.stUIAction)
}

// .GAMESTATEENUM eGameState = 4;
inline void tagUIAPIState::clear_egamestate() {
  egamestate_ = 0;
}
inline ::GAMESTATEENUM tagUIAPIState::egamestate() const {
  // @@protoc_insertion_point(field_get:tagUIAPIState.eGameState)
  return static_cast< ::GAMESTATEENUM >(egamestate_);
}
inline void tagUIAPIState::set_egamestate(::GAMESTATEENUM value) {
  
  egamestate_ = value;
  // @@protoc_insertion_point(field_set:tagUIAPIState.eGameState)
}

// .ESCREENORIENUM eScreenOri = 5;
inline void tagUIAPIState::clear_escreenori() {
  escreenori_ = 0;
}
inline ::ESCREENORIENUM tagUIAPIState::escreenori() const {
  // @@protoc_insertion_point(field_get:tagUIAPIState.eScreenOri)
  return static_cast< ::ESCREENORIENUM >(escreenori_);
}
inline void tagUIAPIState::set_escreenori(::ESCREENORIENUM value) {
  
  escreenori_ = value;
  // @@protoc_insertion_point(field_set:tagUIAPIState.eScreenOri)
}

// -------------------------------------------------------------------

// tagGameActionPoint

// int32 nX = 1;
inline void tagGameActionPoint::clear_nx() {
  nx_ = 0;
}
inline ::google::protobuf::int32 tagGameActionPoint::nx() const {
  // @@protoc_insertion_point(field_get:tagGameActionPoint.nX)
  return nx_;
}
inline void tagGameActionPoint::set_nx(::google::protobuf::int32 value) {
  
  nx_ = value;
  // @@protoc_insertion_point(field_set:tagGameActionPoint.nX)
}

// int32 nY = 2;
inline void tagGameActionPoint::clear_ny() {
  ny_ = 0;
}
inline ::google::protobuf::int32 tagGameActionPoint::ny() const {
  // @@protoc_insertion_point(field_get:tagGameActionPoint.nY)
  return ny_;
}
inline void tagGameActionPoint::set_ny(::google::protobuf::int32 value) {
  
  ny_ = value;
  // @@protoc_insertion_point(field_set:tagGameActionPoint.nY)
}

// -------------------------------------------------------------------

// tagGameActionResult

// .EGAMEACTIONENUM eGameActionType = 1;
inline void tagGameActionResult::clear_egameactiontype() {
  egameactiontype_ = 0;
}
inline ::EGAMEACTIONENUM tagGameActionResult::egameactiontype() const {
  // @@protoc_insertion_point(field_get:tagGameActionResult.eGameActionType)
  return static_cast< ::EGAMEACTIONENUM >(egameactiontype_);
}
inline void tagGameActionResult::set_egameactiontype(::EGAMEACTIONENUM value) {
  
  egameactiontype_ = value;
  // @@protoc_insertion_point(field_set:tagGameActionResult.eGameActionType)
}

// repeated .tagGameActionPoint stGameActionPoint = 2;
inline int tagGameActionResult::stgameactionpoint_size() const {
  return stgameactionpoint_.size();
}
inline void tagGameActionResult::clear_stgameactionpoint() {
  stgameactionpoint_.Clear();
}
inline const ::tagGameActionPoint& tagGameActionResult::stgameactionpoint(int index) const {
  // @@protoc_insertion_point(field_get:tagGameActionResult.stGameActionPoint)
  return stgameactionpoint_.Get(index);
}
inline ::tagGameActionPoint* tagGameActionResult::mutable_stgameactionpoint(int index) {
  // @@protoc_insertion_point(field_mutable:tagGameActionResult.stGameActionPoint)
  return stgameactionpoint_.Mutable(index);
}
inline ::tagGameActionPoint* tagGameActionResult::add_stgameactionpoint() {
  // @@protoc_insertion_point(field_add:tagGameActionResult.stGameActionPoint)
  return stgameactionpoint_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::tagGameActionPoint >*
tagGameActionResult::mutable_stgameactionpoint() {
  // @@protoc_insertion_point(field_mutable_list:tagGameActionResult.stGameActionPoint)
  return &stgameactionpoint_;
}
inline const ::google::protobuf::RepeatedPtrField< ::tagGameActionPoint >&
tagGameActionResult::stgameactionpoint() const {
  // @@protoc_insertion_point(field_list:tagGameActionResult.stGameActionPoint)
  return stgameactionpoint_;
}

// int32 nContact = 3;
inline void tagGameActionResult::clear_ncontact() {
  ncontact_ = 0;
}
inline ::google::protobuf::int32 tagGameActionResult::ncontact() const {
  // @@protoc_insertion_point(field_get:tagGameActionResult.nContact)
  return ncontact_;
}
inline void tagGameActionResult::set_ncontact(::google::protobuf::int32 value) {
  
  ncontact_ = value;
  // @@protoc_insertion_point(field_set:tagGameActionResult.nContact)
}

// int32 nDuringTime = 4;
inline void tagGameActionResult::clear_nduringtime() {
  nduringtime_ = 0;
}
inline ::google::protobuf::int32 tagGameActionResult::nduringtime() const {
  // @@protoc_insertion_point(field_get:tagGameActionResult.nDuringTime)
  return nduringtime_;
}
inline void tagGameActionResult::set_nduringtime(::google::protobuf::int32 value) {
  
  nduringtime_ = value;
  // @@protoc_insertion_point(field_set:tagGameActionResult.nDuringTime)
}

// int32 nWaitTime = 5;
inline void tagGameActionResult::clear_nwaittime() {
  nwaittime_ = 0;
}
inline ::google::protobuf::int32 tagGameActionResult::nwaittime() const {
  // @@protoc_insertion_point(field_get:tagGameActionResult.nWaitTime)
  return nwaittime_;
}
inline void tagGameActionResult::set_nwaittime(::google::protobuf::int32 value) {
  
  nwaittime_ = value;
  // @@protoc_insertion_point(field_set:tagGameActionResult.nWaitTime)
}

// sfixed64 nFrameSeq = 6;
inline void tagGameActionResult::clear_nframeseq() {
  nframeseq_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 tagGameActionResult::nframeseq() const {
  // @@protoc_insertion_point(field_get:tagGameActionResult.nFrameSeq)
  return nframeseq_;
}
inline void tagGameActionResult::set_nframeseq(::google::protobuf::int64 value) {
  
  nframeseq_ = value;
  // @@protoc_insertion_point(field_set:tagGameActionResult.nFrameSeq)
}

// -------------------------------------------------------------------

// tagAIAction

// sfixed64 nFrameSeq = 1;
inline void tagAIAction::clear_nframeseq() {
  nframeseq_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 tagAIAction::nframeseq() const {
  // @@protoc_insertion_point(field_get:tagAIAction.nFrameSeq)
  return nframeseq_;
}
inline void tagAIAction::set_nframeseq(::google::protobuf::int64 value) {
  
  nframeseq_ = value;
  // @@protoc_insertion_point(field_set:tagAIAction.nFrameSeq)
}

// bytes byAIActionBuff = 2;
inline void tagAIAction::clear_byaiactionbuff() {
  byaiactionbuff_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& tagAIAction::byaiactionbuff() const {
  // @@protoc_insertion_point(field_get:tagAIAction.byAIActionBuff)
  return byaiactionbuff_.GetNoArena();
}
inline void tagAIAction::set_byaiactionbuff(const ::std::string& value) {
  
  byaiactionbuff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tagAIAction.byAIActionBuff)
}
#if LANG_CXX11
inline void tagAIAction::set_byaiactionbuff(::std::string&& value) {
  
  byaiactionbuff_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tagAIAction.byAIActionBuff)
}
#endif
inline void tagAIAction::set_byaiactionbuff(const char* value) {
  
  byaiactionbuff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tagAIAction.byAIActionBuff)
}
inline void tagAIAction::set_byaiactionbuff(const void* value, size_t size) {
  
  byaiactionbuff_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tagAIAction.byAIActionBuff)
}
inline ::std::string* tagAIAction::mutable_byaiactionbuff() {
  
  // @@protoc_insertion_point(field_mutable:tagAIAction.byAIActionBuff)
  return byaiactionbuff_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* tagAIAction::release_byaiactionbuff() {
  // @@protoc_insertion_point(field_release:tagAIAction.byAIActionBuff)
  
  return byaiactionbuff_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void tagAIAction::set_allocated_byaiactionbuff(::std::string* byaiactionbuff) {
  if (byaiactionbuff != NULL) {
    
  } else {
    
  }
  byaiactionbuff_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), byaiactionbuff);
  // @@protoc_insertion_point(field_set_allocated:tagAIAction.byAIActionBuff)
}

// -------------------------------------------------------------------

// tagServiceState

// int32 nServiceState = 1;
inline void tagServiceState::clear_nservicestate() {
  nservicestate_ = 0;
}
inline ::google::protobuf::int32 tagServiceState::nservicestate() const {
  // @@protoc_insertion_point(field_get:tagServiceState.nServiceState)
  return nservicestate_;
}
inline void tagServiceState::set_nservicestate(::google::protobuf::int32 value) {
  
  nservicestate_ = value;
  // @@protoc_insertion_point(field_set:tagServiceState.nServiceState)
}

// -------------------------------------------------------------------

// tagChangeGameState

// .GAMESTATEENUM eGameState = 1;
inline void tagChangeGameState::clear_egamestate() {
  egamestate_ = 0;
}
inline ::GAMESTATEENUM tagChangeGameState::egamestate() const {
  // @@protoc_insertion_point(field_get:tagChangeGameState.eGameState)
  return static_cast< ::GAMESTATEENUM >(egamestate_);
}
inline void tagChangeGameState::set_egamestate(::GAMESTATEENUM value) {
  
  egamestate_ = value;
  // @@protoc_insertion_point(field_set:tagChangeGameState.eGameState)
}

// -------------------------------------------------------------------

// tagAgentState

// int32 eAgentState = 1;
inline void tagAgentState::clear_eagentstate() {
  eagentstate_ = 0;
}
inline ::google::protobuf::int32 tagAgentState::eagentstate() const {
  // @@protoc_insertion_point(field_get:tagAgentState.eAgentState)
  return eagentstate_;
}
inline void tagAgentState::set_eagentstate(::google::protobuf::int32 value) {
  
  eagentstate_ = value;
  // @@protoc_insertion_point(field_set:tagAgentState.eAgentState)
}

// string strAgentState = 2;
inline void tagAgentState::clear_stragentstate() {
  stragentstate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& tagAgentState::stragentstate() const {
  // @@protoc_insertion_point(field_get:tagAgentState.strAgentState)
  return stragentstate_.GetNoArena();
}
inline void tagAgentState::set_stragentstate(const ::std::string& value) {
  
  stragentstate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tagAgentState.strAgentState)
}
#if LANG_CXX11
inline void tagAgentState::set_stragentstate(::std::string&& value) {
  
  stragentstate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tagAgentState.strAgentState)
}
#endif
inline void tagAgentState::set_stragentstate(const char* value) {
  
  stragentstate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tagAgentState.strAgentState)
}
inline void tagAgentState::set_stragentstate(const char* value, size_t size) {
  
  stragentstate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tagAgentState.strAgentState)
}
inline ::std::string* tagAgentState::mutable_stragentstate() {
  
  // @@protoc_insertion_point(field_mutable:tagAgentState.strAgentState)
  return stragentstate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* tagAgentState::release_stragentstate() {
  // @@protoc_insertion_point(field_release:tagAgentState.strAgentState)
  
  return stragentstate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void tagAgentState::set_allocated_stragentstate(::std::string* stragentstate) {
  if (stragentstate != NULL) {
    
  } else {
    
  }
  stragentstate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stragentstate);
  // @@protoc_insertion_point(field_set_allocated:tagAgentState.strAgentState)
}

// -------------------------------------------------------------------

// tagIMTrainState

// int32 nProgress = 1;
inline void tagIMTrainState::clear_nprogress() {
  nprogress_ = 0;
}
inline ::google::protobuf::int32 tagIMTrainState::nprogress() const {
  // @@protoc_insertion_point(field_get:tagIMTrainState.nProgress)
  return nprogress_;
}
inline void tagIMTrainState::set_nprogress(::google::protobuf::int32 value) {
  
  nprogress_ = value;
  // @@protoc_insertion_point(field_set:tagIMTrainState.nProgress)
}

// -------------------------------------------------------------------

// tagRestartResult

// .ERESTARTRESULTENUM eRestartResult = 1;
inline void tagRestartResult::clear_erestartresult() {
  erestartresult_ = 0;
}
inline ::ERESTARTRESULTENUM tagRestartResult::erestartresult() const {
  // @@protoc_insertion_point(field_get:tagRestartResult.eRestartResult)
  return static_cast< ::ERESTARTRESULTENUM >(erestartresult_);
}
inline void tagRestartResult::set_erestartresult(::ERESTARTRESULTENUM value) {
  
  erestartresult_ = value;
  // @@protoc_insertion_point(field_set:tagRestartResult.eRestartResult)
}

// -------------------------------------------------------------------

// tagNewTask

// string strTaskID = 1;
inline void tagNewTask::clear_strtaskid() {
  strtaskid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& tagNewTask::strtaskid() const {
  // @@protoc_insertion_point(field_get:tagNewTask.strTaskID)
  return strtaskid_.GetNoArena();
}
inline void tagNewTask::set_strtaskid(const ::std::string& value) {
  
  strtaskid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tagNewTask.strTaskID)
}
#if LANG_CXX11
inline void tagNewTask::set_strtaskid(::std::string&& value) {
  
  strtaskid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tagNewTask.strTaskID)
}
#endif
inline void tagNewTask::set_strtaskid(const char* value) {
  
  strtaskid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tagNewTask.strTaskID)
}
inline void tagNewTask::set_strtaskid(const char* value, size_t size) {
  
  strtaskid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tagNewTask.strTaskID)
}
inline ::std::string* tagNewTask::mutable_strtaskid() {
  
  // @@protoc_insertion_point(field_mutable:tagNewTask.strTaskID)
  return strtaskid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* tagNewTask::release_strtaskid() {
  // @@protoc_insertion_point(field_release:tagNewTask.strTaskID)
  
  return strtaskid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void tagNewTask::set_allocated_strtaskid(::std::string* strtaskid) {
  if (strtaskid != NULL) {
    
  } else {
    
  }
  strtaskid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strtaskid);
  // @@protoc_insertion_point(field_set_allocated:tagNewTask.strTaskID)
}

// int32 nGameID = 2;
inline void tagNewTask::clear_ngameid() {
  ngameid_ = 0;
}
inline ::google::protobuf::int32 tagNewTask::ngameid() const {
  // @@protoc_insertion_point(field_get:tagNewTask.nGameID)
  return ngameid_;
}
inline void tagNewTask::set_ngameid(::google::protobuf::int32 value) {
  
  ngameid_ = value;
  // @@protoc_insertion_point(field_set:tagNewTask.nGameID)
}

// int32 nSceneID = 3;
inline void tagNewTask::clear_nsceneid() {
  nsceneid_ = 0;
}
inline ::google::protobuf::int32 tagNewTask::nsceneid() const {
  // @@protoc_insertion_point(field_get:tagNewTask.nSceneID)
  return nsceneid_;
}
inline void tagNewTask::set_nsceneid(::google::protobuf::int32 value) {
  
  nsceneid_ = value;
  // @@protoc_insertion_point(field_set:tagNewTask.nSceneID)
}

// string strGameVersion = 4;
inline void tagNewTask::clear_strgameversion() {
  strgameversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& tagNewTask::strgameversion() const {
  // @@protoc_insertion_point(field_get:tagNewTask.strGameVersion)
  return strgameversion_.GetNoArena();
}
inline void tagNewTask::set_strgameversion(const ::std::string& value) {
  
  strgameversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tagNewTask.strGameVersion)
}
#if LANG_CXX11
inline void tagNewTask::set_strgameversion(::std::string&& value) {
  
  strgameversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tagNewTask.strGameVersion)
}
#endif
inline void tagNewTask::set_strgameversion(const char* value) {
  
  strgameversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tagNewTask.strGameVersion)
}
inline void tagNewTask::set_strgameversion(const char* value, size_t size) {
  
  strgameversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tagNewTask.strGameVersion)
}
inline ::std::string* tagNewTask::mutable_strgameversion() {
  
  // @@protoc_insertion_point(field_mutable:tagNewTask.strGameVersion)
  return strgameversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* tagNewTask::release_strgameversion() {
  // @@protoc_insertion_point(field_release:tagNewTask.strGameVersion)
  
  return strgameversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void tagNewTask::set_allocated_strgameversion(::std::string* strgameversion) {
  if (strgameversion != NULL) {
    
  } else {
    
  }
  strgameversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strgameversion);
  // @@protoc_insertion_point(field_set_allocated:tagNewTask.strGameVersion)
}

// -------------------------------------------------------------------

// tagTestID

// string strTestID = 1;
inline void tagTestID::clear_strtestid() {
  strtestid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& tagTestID::strtestid() const {
  // @@protoc_insertion_point(field_get:tagTestID.strTestID)
  return strtestid_.GetNoArena();
}
inline void tagTestID::set_strtestid(const ::std::string& value) {
  
  strtestid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tagTestID.strTestID)
}
#if LANG_CXX11
inline void tagTestID::set_strtestid(::std::string&& value) {
  
  strtestid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tagTestID.strTestID)
}
#endif
inline void tagTestID::set_strtestid(const char* value) {
  
  strtestid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tagTestID.strTestID)
}
inline void tagTestID::set_strtestid(const char* value, size_t size) {
  
  strtestid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tagTestID.strTestID)
}
inline ::std::string* tagTestID::mutable_strtestid() {
  
  // @@protoc_insertion_point(field_mutable:tagTestID.strTestID)
  return strtestid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* tagTestID::release_strtestid() {
  // @@protoc_insertion_point(field_release:tagTestID.strTestID)
  
  return strtestid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void tagTestID::set_allocated_strtestid(::std::string* strtestid) {
  if (strtestid != NULL) {
    
  } else {
    
  }
  strtestid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strtestid);
  // @@protoc_insertion_point(field_set_allocated:tagTestID.strTestID)
}

// int32 nGameID = 2;
inline void tagTestID::clear_ngameid() {
  ngameid_ = 0;
}
inline ::google::protobuf::int32 tagTestID::ngameid() const {
  // @@protoc_insertion_point(field_get:tagTestID.nGameID)
  return ngameid_;
}
inline void tagTestID::set_ngameid(::google::protobuf::int32 value) {
  
  ngameid_ = value;
  // @@protoc_insertion_point(field_set:tagTestID.nGameID)
}

// string strGameVersion = 3;
inline void tagTestID::clear_strgameversion() {
  strgameversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& tagTestID::strgameversion() const {
  // @@protoc_insertion_point(field_get:tagTestID.strGameVersion)
  return strgameversion_.GetNoArena();
}
inline void tagTestID::set_strgameversion(const ::std::string& value) {
  
  strgameversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:tagTestID.strGameVersion)
}
#if LANG_CXX11
inline void tagTestID::set_strgameversion(::std::string&& value) {
  
  strgameversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:tagTestID.strGameVersion)
}
#endif
inline void tagTestID::set_strgameversion(const char* value) {
  
  strgameversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:tagTestID.strGameVersion)
}
inline void tagTestID::set_strgameversion(const char* value, size_t size) {
  
  strgameversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:tagTestID.strGameVersion)
}
inline ::std::string* tagTestID::mutable_strgameversion() {
  
  // @@protoc_insertion_point(field_mutable:tagTestID.strGameVersion)
  return strgameversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* tagTestID::release_strgameversion() {
  // @@protoc_insertion_point(field_release:tagTestID.strGameVersion)
  
  return strgameversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void tagTestID::set_allocated_strgameversion(::std::string* strgameversion) {
  if (strgameversion != NULL) {
    
  } else {
    
  }
  strgameversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strgameversion);
  // @@protoc_insertion_point(field_set_allocated:tagTestID.strGameVersion)
}

// -------------------------------------------------------------------

// tagMessage

// .EMSGIDENUM eMsgID = 1;
inline void tagMessage::clear_emsgid() {
  emsgid_ = 0;
}
inline ::EMSGIDENUM tagMessage::emsgid() const {
  // @@protoc_insertion_point(field_get:tagMessage.eMsgID)
  return static_cast< ::EMSGIDENUM >(emsgid_);
}
inline void tagMessage::set_emsgid(::EMSGIDENUM value) {
  
  emsgid_ = value;
  // @@protoc_insertion_point(field_set:tagMessage.eMsgID)
}

// .tagServiceRegister stServiceRegister = 2;
inline bool tagMessage::has_stserviceregister() const {
  return this != internal_default_instance() && stserviceregister_ != NULL;
}
inline void tagMessage::clear_stserviceregister() {
  if (GetArenaNoVirtual() == NULL && stserviceregister_ != NULL) delete stserviceregister_;
  stserviceregister_ = NULL;
}
inline const ::tagServiceRegister& tagMessage::stserviceregister() const {
  // @@protoc_insertion_point(field_get:tagMessage.stServiceRegister)
  return stserviceregister_ != NULL ? *stserviceregister_
                         : *::tagServiceRegister::internal_default_instance();
}
inline ::tagServiceRegister* tagMessage::mutable_stserviceregister() {
  
  if (stserviceregister_ == NULL) {
    stserviceregister_ = new ::tagServiceRegister;
  }
  // @@protoc_insertion_point(field_mutable:tagMessage.stServiceRegister)
  return stserviceregister_;
}
inline ::tagServiceRegister* tagMessage::release_stserviceregister() {
  // @@protoc_insertion_point(field_release:tagMessage.stServiceRegister)
  
  ::tagServiceRegister* temp = stserviceregister_;
  stserviceregister_ = NULL;
  return temp;
}
inline void tagMessage::set_allocated_stserviceregister(::tagServiceRegister* stserviceregister) {
  delete stserviceregister_;
  stserviceregister_ = stserviceregister;
  if (stserviceregister) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tagMessage.stServiceRegister)
}

// .tagTaskReport stTaskReport = 3;
inline bool tagMessage::has_sttaskreport() const {
  return this != internal_default_instance() && sttaskreport_ != NULL;
}
inline void tagMessage::clear_sttaskreport() {
  if (GetArenaNoVirtual() == NULL && sttaskreport_ != NULL) delete sttaskreport_;
  sttaskreport_ = NULL;
}
inline const ::tagTaskReport& tagMessage::sttaskreport() const {
  // @@protoc_insertion_point(field_get:tagMessage.stTaskReport)
  return sttaskreport_ != NULL ? *sttaskreport_
                         : *::tagTaskReport::internal_default_instance();
}
inline ::tagTaskReport* tagMessage::mutable_sttaskreport() {
  
  if (sttaskreport_ == NULL) {
    sttaskreport_ = new ::tagTaskReport;
  }
  // @@protoc_insertion_point(field_mutable:tagMessage.stTaskReport)
  return sttaskreport_;
}
inline ::tagTaskReport* tagMessage::release_sttaskreport() {
  // @@protoc_insertion_point(field_release:tagMessage.stTaskReport)
  
  ::tagTaskReport* temp = sttaskreport_;
  sttaskreport_ = NULL;
  return temp;
}
inline void tagMessage::set_allocated_sttaskreport(::tagTaskReport* sttaskreport) {
  delete sttaskreport_;
  sttaskreport_ = sttaskreport;
  if (sttaskreport) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tagMessage.stTaskReport)
}

// .tagSrcImageInfo stSrcImageInfo = 4;
inline bool tagMessage::has_stsrcimageinfo() const {
  return this != internal_default_instance() && stsrcimageinfo_ != NULL;
}
inline void tagMessage::clear_stsrcimageinfo() {
  if (GetArenaNoVirtual() == NULL && stsrcimageinfo_ != NULL) delete stsrcimageinfo_;
  stsrcimageinfo_ = NULL;
}
inline const ::tagSrcImageInfo& tagMessage::stsrcimageinfo() const {
  // @@protoc_insertion_point(field_get:tagMessage.stSrcImageInfo)
  return stsrcimageinfo_ != NULL ? *stsrcimageinfo_
                         : *::tagSrcImageInfo::internal_default_instance();
}
inline ::tagSrcImageInfo* tagMessage::mutable_stsrcimageinfo() {
  
  if (stsrcimageinfo_ == NULL) {
    stsrcimageinfo_ = new ::tagSrcImageInfo;
  }
  // @@protoc_insertion_point(field_mutable:tagMessage.stSrcImageInfo)
  return stsrcimageinfo_;
}
inline ::tagSrcImageInfo* tagMessage::release_stsrcimageinfo() {
  // @@protoc_insertion_point(field_release:tagMessage.stSrcImageInfo)
  
  ::tagSrcImageInfo* temp = stsrcimageinfo_;
  stsrcimageinfo_ = NULL;
  return temp;
}
inline void tagMessage::set_allocated_stsrcimageinfo(::tagSrcImageInfo* stsrcimageinfo) {
  delete stsrcimageinfo_;
  stsrcimageinfo_ = stsrcimageinfo;
  if (stsrcimageinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tagMessage.stSrcImageInfo)
}

// .tagUIAPIState stUIAPIState = 9;
inline bool tagMessage::has_stuiapistate() const {
  return this != internal_default_instance() && stuiapistate_ != NULL;
}
inline void tagMessage::clear_stuiapistate() {
  if (GetArenaNoVirtual() == NULL && stuiapistate_ != NULL) delete stuiapistate_;
  stuiapistate_ = NULL;
}
inline const ::tagUIAPIState& tagMessage::stuiapistate() const {
  // @@protoc_insertion_point(field_get:tagMessage.stUIAPIState)
  return stuiapistate_ != NULL ? *stuiapistate_
                         : *::tagUIAPIState::internal_default_instance();
}
inline ::tagUIAPIState* tagMessage::mutable_stuiapistate() {
  
  if (stuiapistate_ == NULL) {
    stuiapistate_ = new ::tagUIAPIState;
  }
  // @@protoc_insertion_point(field_mutable:tagMessage.stUIAPIState)
  return stuiapistate_;
}
inline ::tagUIAPIState* tagMessage::release_stuiapistate() {
  // @@protoc_insertion_point(field_release:tagMessage.stUIAPIState)
  
  ::tagUIAPIState* temp = stuiapistate_;
  stuiapistate_ = NULL;
  return temp;
}
inline void tagMessage::set_allocated_stuiapistate(::tagUIAPIState* stuiapistate) {
  delete stuiapistate_;
  stuiapistate_ = stuiapistate;
  if (stuiapistate) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tagMessage.stUIAPIState)
}

// .tagUIAction stUIAction = 10;
inline bool tagMessage::has_stuiaction() const {
  return this != internal_default_instance() && stuiaction_ != NULL;
}
inline void tagMessage::clear_stuiaction() {
  if (GetArenaNoVirtual() == NULL && stuiaction_ != NULL) delete stuiaction_;
  stuiaction_ = NULL;
}
inline const ::tagUIAction& tagMessage::stuiaction() const {
  // @@protoc_insertion_point(field_get:tagMessage.stUIAction)
  return stuiaction_ != NULL ? *stuiaction_
                         : *::tagUIAction::internal_default_instance();
}
inline ::tagUIAction* tagMessage::mutable_stuiaction() {
  
  if (stuiaction_ == NULL) {
    stuiaction_ = new ::tagUIAction;
  }
  // @@protoc_insertion_point(field_mutable:tagMessage.stUIAction)
  return stuiaction_;
}
inline ::tagUIAction* tagMessage::release_stuiaction() {
  // @@protoc_insertion_point(field_release:tagMessage.stUIAction)
  
  ::tagUIAction* temp = stuiaction_;
  stuiaction_ = NULL;
  return temp;
}
inline void tagMessage::set_allocated_stuiaction(::tagUIAction* stuiaction) {
  delete stuiaction_;
  stuiaction_ = stuiaction;
  if (stuiaction) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tagMessage.stUIAction)
}

// .tagAIAction stAIAction = 12;
inline bool tagMessage::has_staiaction() const {
  return this != internal_default_instance() && staiaction_ != NULL;
}
inline void tagMessage::clear_staiaction() {
  if (GetArenaNoVirtual() == NULL && staiaction_ != NULL) delete staiaction_;
  staiaction_ = NULL;
}
inline const ::tagAIAction& tagMessage::staiaction() const {
  // @@protoc_insertion_point(field_get:tagMessage.stAIAction)
  return staiaction_ != NULL ? *staiaction_
                         : *::tagAIAction::internal_default_instance();
}
inline ::tagAIAction* tagMessage::mutable_staiaction() {
  
  if (staiaction_ == NULL) {
    staiaction_ = new ::tagAIAction;
  }
  // @@protoc_insertion_point(field_mutable:tagMessage.stAIAction)
  return staiaction_;
}
inline ::tagAIAction* tagMessage::release_staiaction() {
  // @@protoc_insertion_point(field_release:tagMessage.stAIAction)
  
  ::tagAIAction* temp = staiaction_;
  staiaction_ = NULL;
  return temp;
}
inline void tagMessage::set_allocated_staiaction(::tagAIAction* staiaction) {
  delete staiaction_;
  staiaction_ = staiaction;
  if (staiaction) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tagMessage.stAIAction)
}

// .tagServiceState stServiceState = 13;
inline bool tagMessage::has_stservicestate() const {
  return this != internal_default_instance() && stservicestate_ != NULL;
}
inline void tagMessage::clear_stservicestate() {
  if (GetArenaNoVirtual() == NULL && stservicestate_ != NULL) delete stservicestate_;
  stservicestate_ = NULL;
}
inline const ::tagServiceState& tagMessage::stservicestate() const {
  // @@protoc_insertion_point(field_get:tagMessage.stServiceState)
  return stservicestate_ != NULL ? *stservicestate_
                         : *::tagServiceState::internal_default_instance();
}
inline ::tagServiceState* tagMessage::mutable_stservicestate() {
  
  if (stservicestate_ == NULL) {
    stservicestate_ = new ::tagServiceState;
  }
  // @@protoc_insertion_point(field_mutable:tagMessage.stServiceState)
  return stservicestate_;
}
inline ::tagServiceState* tagMessage::release_stservicestate() {
  // @@protoc_insertion_point(field_release:tagMessage.stServiceState)
  
  ::tagServiceState* temp = stservicestate_;
  stservicestate_ = NULL;
  return temp;
}
inline void tagMessage::set_allocated_stservicestate(::tagServiceState* stservicestate) {
  delete stservicestate_;
  stservicestate_ = stservicestate;
  if (stservicestate) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tagMessage.stServiceState)
}

// .tagChangeGameState stChangeGameState = 14;
inline bool tagMessage::has_stchangegamestate() const {
  return this != internal_default_instance() && stchangegamestate_ != NULL;
}
inline void tagMessage::clear_stchangegamestate() {
  if (GetArenaNoVirtual() == NULL && stchangegamestate_ != NULL) delete stchangegamestate_;
  stchangegamestate_ = NULL;
}
inline const ::tagChangeGameState& tagMessage::stchangegamestate() const {
  // @@protoc_insertion_point(field_get:tagMessage.stChangeGameState)
  return stchangegamestate_ != NULL ? *stchangegamestate_
                         : *::tagChangeGameState::internal_default_instance();
}
inline ::tagChangeGameState* tagMessage::mutable_stchangegamestate() {
  
  if (stchangegamestate_ == NULL) {
    stchangegamestate_ = new ::tagChangeGameState;
  }
  // @@protoc_insertion_point(field_mutable:tagMessage.stChangeGameState)
  return stchangegamestate_;
}
inline ::tagChangeGameState* tagMessage::release_stchangegamestate() {
  // @@protoc_insertion_point(field_release:tagMessage.stChangeGameState)
  
  ::tagChangeGameState* temp = stchangegamestate_;
  stchangegamestate_ = NULL;
  return temp;
}
inline void tagMessage::set_allocated_stchangegamestate(::tagChangeGameState* stchangegamestate) {
  delete stchangegamestate_;
  stchangegamestate_ = stchangegamestate;
  if (stchangegamestate) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tagMessage.stChangeGameState)
}

// .tagAgentState stAgentState = 15;
inline bool tagMessage::has_stagentstate() const {
  return this != internal_default_instance() && stagentstate_ != NULL;
}
inline void tagMessage::clear_stagentstate() {
  if (GetArenaNoVirtual() == NULL && stagentstate_ != NULL) delete stagentstate_;
  stagentstate_ = NULL;
}
inline const ::tagAgentState& tagMessage::stagentstate() const {
  // @@protoc_insertion_point(field_get:tagMessage.stAgentState)
  return stagentstate_ != NULL ? *stagentstate_
                         : *::tagAgentState::internal_default_instance();
}
inline ::tagAgentState* tagMessage::mutable_stagentstate() {
  
  if (stagentstate_ == NULL) {
    stagentstate_ = new ::tagAgentState;
  }
  // @@protoc_insertion_point(field_mutable:tagMessage.stAgentState)
  return stagentstate_;
}
inline ::tagAgentState* tagMessage::release_stagentstate() {
  // @@protoc_insertion_point(field_release:tagMessage.stAgentState)
  
  ::tagAgentState* temp = stagentstate_;
  stagentstate_ = NULL;
  return temp;
}
inline void tagMessage::set_allocated_stagentstate(::tagAgentState* stagentstate) {
  delete stagentstate_;
  stagentstate_ = stagentstate;
  if (stagentstate) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tagMessage.stAgentState)
}

// .tagRestartResult stRestartResult = 16;
inline bool tagMessage::has_strestartresult() const {
  return this != internal_default_instance() && strestartresult_ != NULL;
}
inline void tagMessage::clear_strestartresult() {
  if (GetArenaNoVirtual() == NULL && strestartresult_ != NULL) delete strestartresult_;
  strestartresult_ = NULL;
}
inline const ::tagRestartResult& tagMessage::strestartresult() const {
  // @@protoc_insertion_point(field_get:tagMessage.stRestartResult)
  return strestartresult_ != NULL ? *strestartresult_
                         : *::tagRestartResult::internal_default_instance();
}
inline ::tagRestartResult* tagMessage::mutable_strestartresult() {
  
  if (strestartresult_ == NULL) {
    strestartresult_ = new ::tagRestartResult;
  }
  // @@protoc_insertion_point(field_mutable:tagMessage.stRestartResult)
  return strestartresult_;
}
inline ::tagRestartResult* tagMessage::release_strestartresult() {
  // @@protoc_insertion_point(field_release:tagMessage.stRestartResult)
  
  ::tagRestartResult* temp = strestartresult_;
  strestartresult_ = NULL;
  return temp;
}
inline void tagMessage::set_allocated_strestartresult(::tagRestartResult* strestartresult) {
  delete strestartresult_;
  strestartresult_ = strestartresult;
  if (strestartresult) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tagMessage.stRestartResult)
}

// .tagNewTask stNewTask = 17;
inline bool tagMessage::has_stnewtask() const {
  return this != internal_default_instance() && stnewtask_ != NULL;
}
inline void tagMessage::clear_stnewtask() {
  if (GetArenaNoVirtual() == NULL && stnewtask_ != NULL) delete stnewtask_;
  stnewtask_ = NULL;
}
inline const ::tagNewTask& tagMessage::stnewtask() const {
  // @@protoc_insertion_point(field_get:tagMessage.stNewTask)
  return stnewtask_ != NULL ? *stnewtask_
                         : *::tagNewTask::internal_default_instance();
}
inline ::tagNewTask* tagMessage::mutable_stnewtask() {
  
  if (stnewtask_ == NULL) {
    stnewtask_ = new ::tagNewTask;
  }
  // @@protoc_insertion_point(field_mutable:tagMessage.stNewTask)
  return stnewtask_;
}
inline ::tagNewTask* tagMessage::release_stnewtask() {
  // @@protoc_insertion_point(field_release:tagMessage.stNewTask)
  
  ::tagNewTask* temp = stnewtask_;
  stnewtask_ = NULL;
  return temp;
}
inline void tagMessage::set_allocated_stnewtask(::tagNewTask* stnewtask) {
  delete stnewtask_;
  stnewtask_ = stnewtask;
  if (stnewtask) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tagMessage.stNewTask)
}

// .tagTestID stTestID = 18;
inline bool tagMessage::has_sttestid() const {
  return this != internal_default_instance() && sttestid_ != NULL;
}
inline void tagMessage::clear_sttestid() {
  if (GetArenaNoVirtual() == NULL && sttestid_ != NULL) delete sttestid_;
  sttestid_ = NULL;
}
inline const ::tagTestID& tagMessage::sttestid() const {
  // @@protoc_insertion_point(field_get:tagMessage.stTestID)
  return sttestid_ != NULL ? *sttestid_
                         : *::tagTestID::internal_default_instance();
}
inline ::tagTestID* tagMessage::mutable_sttestid() {
  
  if (sttestid_ == NULL) {
    sttestid_ = new ::tagTestID;
  }
  // @@protoc_insertion_point(field_mutable:tagMessage.stTestID)
  return sttestid_;
}
inline ::tagTestID* tagMessage::release_sttestid() {
  // @@protoc_insertion_point(field_release:tagMessage.stTestID)
  
  ::tagTestID* temp = sttestid_;
  sttestid_ = NULL;
  return temp;
}
inline void tagMessage::set_allocated_sttestid(::tagTestID* sttestid) {
  delete sttestid_;
  sttestid_ = sttestid;
  if (sttestid) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tagMessage.stTestID)
}

// .tagPBAgentMsg stPBAgentMsg = 19;
inline bool tagMessage::has_stpbagentmsg() const {
  return this != internal_default_instance() && stpbagentmsg_ != NULL;
}
inline void tagMessage::clear_stpbagentmsg() {
  if (GetArenaNoVirtual() == NULL && stpbagentmsg_ != NULL) delete stpbagentmsg_;
  stpbagentmsg_ = NULL;
}
inline const ::tagPBAgentMsg& tagMessage::stpbagentmsg() const {
  // @@protoc_insertion_point(field_get:tagMessage.stPBAgentMsg)
  return stpbagentmsg_ != NULL ? *stpbagentmsg_
                         : *::tagPBAgentMsg::internal_default_instance();
}
inline ::tagPBAgentMsg* tagMessage::mutable_stpbagentmsg() {
  
  if (stpbagentmsg_ == NULL) {
    stpbagentmsg_ = new ::tagPBAgentMsg;
  }
  // @@protoc_insertion_point(field_mutable:tagMessage.stPBAgentMsg)
  return stpbagentmsg_;
}
inline ::tagPBAgentMsg* tagMessage::release_stpbagentmsg() {
  // @@protoc_insertion_point(field_release:tagMessage.stPBAgentMsg)
  
  ::tagPBAgentMsg* temp = stpbagentmsg_;
  stpbagentmsg_ = NULL;
  return temp;
}
inline void tagMessage::set_allocated_stpbagentmsg(::tagPBAgentMsg* stpbagentmsg) {
  delete stpbagentmsg_;
  stpbagentmsg_ = stpbagentmsg;
  if (stpbagentmsg) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tagMessage.stPBAgentMsg)
}

// .tagIMTrainState stIMTrainState = 20;
inline bool tagMessage::has_stimtrainstate() const {
  return this != internal_default_instance() && stimtrainstate_ != NULL;
}
inline void tagMessage::clear_stimtrainstate() {
  if (GetArenaNoVirtual() == NULL && stimtrainstate_ != NULL) delete stimtrainstate_;
  stimtrainstate_ = NULL;
}
inline const ::tagIMTrainState& tagMessage::stimtrainstate() const {
  // @@protoc_insertion_point(field_get:tagMessage.stIMTrainState)
  return stimtrainstate_ != NULL ? *stimtrainstate_
                         : *::tagIMTrainState::internal_default_instance();
}
inline ::tagIMTrainState* tagMessage::mutable_stimtrainstate() {
  
  if (stimtrainstate_ == NULL) {
    stimtrainstate_ = new ::tagIMTrainState;
  }
  // @@protoc_insertion_point(field_mutable:tagMessage.stIMTrainState)
  return stimtrainstate_;
}
inline ::tagIMTrainState* tagMessage::release_stimtrainstate() {
  // @@protoc_insertion_point(field_release:tagMessage.stIMTrainState)
  
  ::tagIMTrainState* temp = stimtrainstate_;
  stimtrainstate_ = NULL;
  return temp;
}
inline void tagMessage::set_allocated_stimtrainstate(::tagIMTrainState* stimtrainstate) {
  delete stimtrainstate_;
  stimtrainstate_ = stimtrainstate;
  if (stimtrainstate) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:tagMessage.stIMTrainState)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::EMSGIDENUM> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EMSGIDENUM>() {
  return ::EMSGIDENUM_descriptor();
}
template <> struct is_proto_enum< ::ESERVICETYPEENUM> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ESERVICETYPEENUM>() {
  return ::ESERVICETYPEENUM_descriptor();
}
template <> struct is_proto_enum< ::ESERVICEREGISTERENUM> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ESERVICEREGISTERENUM>() {
  return ::ESERVICEREGISTERENUM_descriptor();
}
template <> struct is_proto_enum< ::ETASKSTATUSENUM> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ETASKSTATUSENUM>() {
  return ::ETASKSTATUSENUM_descriptor();
}
template <> struct is_proto_enum< ::GAMESTATEENUM> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GAMESTATEENUM>() {
  return ::GAMESTATEENUM_descriptor();
}
template <> struct is_proto_enum< ::EUIAPISTATEENUM> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EUIAPISTATEENUM>() {
  return ::EUIAPISTATEENUM_descriptor();
}
template <> struct is_proto_enum< ::EUIAPIACTIONENUM> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EUIAPIACTIONENUM>() {
  return ::EUIAPIACTIONENUM_descriptor();
}
template <> struct is_proto_enum< ::ESCREENORIENUM> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ESCREENORIENUM>() {
  return ::ESCREENORIENUM_descriptor();
}
template <> struct is_proto_enum< ::EGAMEACTIONENUM> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::EGAMEACTIONENUM>() {
  return ::EGAMEACTIONENUM_descriptor();
}
template <> struct is_proto_enum< ::ERESTARTRESULTENUM> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ERESTARTRESULTENUM>() {
  return ::ERESTARTRESULTENUM_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_common_2eproto__INCLUDED
