from ActionAPI.ActionAPIMgr import ActionAPIMgr

class XXXWindow(object):
    def __init__(self):
        self.attackBtnX = -1
        self.attackBtnY = -1

        self.jumpBtnX = -1
        self.jumpBtnY = -1

        self.skillBtnX = -1
        self.skillBtnY = -1

    def IsBtnPostionOK(self):
        btnPosList = [self.attackBtnX, self.attackBtnY, self.jumpBtnX, self.jumpBtnY, self.skillBtnX, self.skillBtnY]
        return min(btnPosList) > 0

class XXXAction(object):
    def __init__(self, actionWindow):
        self.__actionMgr = ActionAPIMgr()
        self.__actionWindow = actionWindow

    def Initialize(self):
        return self.__actionMgr.Initialize()

    def Finish(self):
        self.__actionMgr.Finish()

    def ResetAction(self, frameIndex):
        self.__actionMgr.Reset(frameSeq=frameIndex)
	
    def DoAttack(self, frameIndex):
        """
        攻击动作
        attackBtnX, attackBtnY 为像素坐标点
        contact 为触控ID
        frameSeq 为帧序号 
        durationMS 为点击持续时间
        """
        self.__actionMgr.Click(self.__actionWindow.attackBtnX, self.__actionWindow.attackBtnY, contact=0, frameSeq=frameIndex, durationMS=50)

    def DoJump(self, frameIndex):
        """
        跳跃动作
        jumpBtnX, jumpBtnY 为像素坐标点
        contact 为触控ID
        frameSeq 为帧序号 
        durationMS 为点击持续时间
        """
        self.__actionMgr.Click(self.__actionWindow.jumpBtnX, self.__actionWindow.jumpBtnY, contact=0, frameSeq=frameIndex, durationMS=50)

    def DoSkill(self, frameIndex):
        """
        释放技能动作
        skillBtnX, skillBtnY 为像素坐标点
        contact 为触控ID
        frameSeq 为帧序号 
        durationMS 为点击持续时间
        """
        self.__actionMgr.Click(self.__actionWindow.skillBtnX, self.__actionWindow.skillBtnY, contact=0, frameSeq=frameIndex, durationMS=50)