#!/usr/bin/env python
# coding: utf-8

import random
import numpy as np

def CheckTaskFlag(resultDict, taskID):
    value = resultDict.get(taskID)
    if value is None:
        return False

    flag = False
    for element in value:
        if element['flag']:
            flag = True
    return flag

def GetTaskPoint(resultDict, taskID):
    value = resultDict.get(taskID)
    if value is None:
        return None

    point = None
    for element in value:
        if element['flag']:
            x = element['boxes'][0]['x']
            y = element['boxes'][0]['y']
            w = element['boxes'][0]['w']
            h = element['boxes'][0]['h']
            point = np.array((int(x + w / 2), int(y + h / 2)))
    return point

def GetTaskAllPoint(resultDict, taskID):
    value = resultDict.get(taskID)
    if value is None:
        return []

    pointList = []
    for element in value:
        if element['flag']:
            for box in element['boxes']:
                x = box['x']
                y = box['y']
                w = box['w']
                h = box['h']
                point = np.array((int(x + w / 2), int(y + h / 2)))
                pointList.append(point)

    return pointList

def GetFirstMatchTaskPoint(resultDict, taskDescList):
    point = None

    for taskDesc in taskDescList:
        taskID = taskDesc['taskID']
        randomChoice = taskDesc['randomChoice']
        pointOffset = taskDesc['pointOffset']

        if CheckTaskFlag(resultDict, taskID):
            if randomChoice:
                pointList = GetTaskAllPoint(resultDict, taskID)
                point = random.choice(pointList)
            else:
                point = GetTaskPoint(resultDict, taskID)
            
            if pointOffset is not None:
                point += pointOffset

            break

    return point

def MergeDict(dict1, dict2):
    return dict2.update(dict1)
