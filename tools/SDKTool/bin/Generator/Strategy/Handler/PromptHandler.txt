#!/usr/bin/env python
# coding: utf-8
import random
import numpy as np

from .AbstractHandler import AbstractHandler, LOG
from LSWZ.Tools import *

TASK_ID_QUAN_BU_LING_QU = 6  #全部领取
TASK_ID_LING_JIANG = 7  #领取奖励
TASK_ID_SHENG_JI = 8  #升级
TASK_ID_QUE_DING = 9  #确定
TASK_ID_JIAN_ZAO = 10  #建造
TASK_ID_ZAN_BI_FENG_MANG = 11  #暂避锋芒
TASK_ID_QIAN_WANG = 12  #暂避锋芒
TASK_ID_JIAN_ZAO_YI_GUAN = 13  #建造医管 
TASK_ID_XUN_LIAN = 14  #训练 
TASK_ID_KAI_KEN_HUANG_DI = 15  #开垦荒地
TASK_ID_JIE_SUO = 16  #解锁
TASK_ID_YAN_JIU = 17  #研究
TASK_ID_YAN_JIU2 = 18  #研究
TASK_ID_LING_QU = 19  #领取
TASK_ID_LING_QU_JIANG_LI = 20  #领取奖励
TASK_ID_GONG_JI = 21  #攻击
TASK_ID_CHU_ZHENG = 22 #出征
TASK_ID_QUE_DING2 = 23 #确定2
TASK_ID_GU_YONG = 24 #雇佣
TASK_ID_QUE_DING3 = 25 #确定3

class PromptHandler(AbstractHandler):
    '''
    提示Handler，处理各种游戏提示，如训练、确定、研究、升级等提示
    '''
    def __init__(self, *args, **kwargs):
        super(PromptHandler, self).__init__(args, kwargs)

    def Initialize(self, *args, **kwargs):
        return True

    def Finish(self, *args, **kwargs):
        return True

    def Update(self, resultDict):
        taskDescList = [
                        {'taskID': TASK_ID_LING_JIANG, 'randomChoice': False, 'pointOffset': None},  #领奖
                        {'taskID': TASK_ID_SHENG_JI, 'randomChoice': False, 'pointOffset': None},    #升级
                        {'taskID': TASK_ID_QUE_DING, 'randomChoice': False, 'pointOffset': None},    #确定
                        {'taskID': TASK_ID_QUE_DING2, 'randomChoice': False, 'pointOffset': None},    #确定2
                        {'taskID': TASK_ID_QUE_DING3, 'randomChoice': False, 'pointOffset': None},    #确定3
                        {'taskID': TASK_ID_JIAN_ZAO, 'randomChoice': False, 'pointOffset': None},    #建造
                        {'taskID': TASK_ID_YAN_JIU, 'randomChoice': False, 'pointOffset': None},     #研究
                        {'taskID': TASK_ID_YAN_JIU2, 'randomChoice': False, 'pointOffset': None},     #研究2
                        {'taskID': TASK_ID_LING_QU, 'randomChoice': False, 'pointOffset': None},     #领取
                        {'taskID': TASK_ID_LING_QU_JIANG_LI, 'randomChoice': False, 'pointOffset': None},     #全部领取
                        {'taskID': TASK_ID_JIE_SUO, 'randomChoice': False, 'pointOffset': None},     #解锁
                        {'taskID': TASK_ID_GONG_JI, 'randomChoice': False, 'pointOffset': None},     #攻击
                        {'taskID': TASK_ID_CHU_ZHENG, 'randomChoice': False, 'pointOffset': None},     #出征
                        {'taskID': TASK_ID_GU_YONG, 'randomChoice': False, 'pointOffset': None},     #雇佣
                        {'taskID': TASK_ID_ZAN_BI_FENG_MANG, 'randomChoice': False, 'pointOffset': None},    #暂避锋芒
                        {'taskID': TASK_ID_KAI_KEN_HUANG_DI, 'randomChoice': False, 'pointOffset': None},    #开垦荒地
                        {'taskID': TASK_ID_QIAN_WANG, 'randomChoice': True, 'pointOffset': None},    #前往
                        {'taskID': TASK_ID_XUN_LIAN, 'randomChoice': False, 'pointOffset': None},    #训练
                        {'taskID': TASK_ID_JIAN_ZAO_YI_GUAN, 'randomChoice': False, 'pointOffset': None},    #建造医馆
                        {'taskID': TASK_ID_QUAN_BU_LING_QU, 'randomChoice': False, 'pointOffset': None}     #全部领取
                      ]
        point = GetFirstMatchTaskPoint(resultDict, taskDescList)

        if point is not None:
            self.action = {
                "actionType": 'click',
                "point": point
            }
        else:
            self.action = None
        return
