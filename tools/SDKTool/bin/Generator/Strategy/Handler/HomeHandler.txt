#!/usr/bin/env python
# coding: utf-8

import random

from .AbstractHandler import AbstractHandler, LOG
from LSWZ.Tools import *

TASK_ID_GUIDE = 1  # 手形引导
TASK_ID_HOME = 31  # 识别家
TASK_ID_JU_QING = 32  # 识别剧情
TASK_ID_MIAN_FEI = 33  # 识别免费
TASK_ID_REN_WU = 34  # 识别任务
TASK_ID_GU_WU = 35  # 识别谷物图标
TASK_ID_XIANG_ZI = 36  # 识别箱子图标
TASK_ID_MU_TOU = 37  # 识别木头图标
TASK_ID_XUN_LIAN_2 = 38  # 识别训练图标


class HomeHandler(AbstractHandler):
    '''
    城镇Handler，点击剧情、任务、提示、免费加速、收集资源等
    '''
    def __init__(self, *args, **kwargs):
        super(HomeHandler, self).__init__(args, kwargs)

    def Initialize(self, *args, **kwargs):
        return True

    def Finish(self, *args, **kwargs):
        return True

    def Update(self, resultDict):
        if not CheckTaskFlag(resultDict, TASK_ID_HOME):
            self.action = None
            return

        taskID = random.choice([TASK_ID_JU_QING, TASK_ID_REN_WU])   #剧情或任务随机二选一
        taskDescList = [
                        {'taskID': TASK_ID_GUIDE, 'randomChoice': False, 'pointOffset': np.array([-50, 50])},   #手形提示
                        {'taskID': TASK_ID_MIAN_FEI, 'randomChoice': False, 'pointOffset': None},               #免费
                        {'taskID': TASK_ID_GU_WU, 'randomChoice': False, 'pointOffset': None},                  #谷物
                        {'taskID': TASK_ID_XIANG_ZI, 'randomChoice': False, 'pointOffset': None},               #箱子
                        {'taskID': TASK_ID_MU_TOU, 'randomChoice': False, 'pointOffset': None},                 #木头
                        {'taskID': TASK_ID_XUN_LIAN_2, 'randomChoice': False, 'pointOffset': None},             #训练
                        {'taskID': taskID, 'randomChoice': False, 'pointOffset': None},                         #剧情或任务
                        
                       ]
        point = GetFirstMatchTaskPoint(resultDict, taskDescList)

        if point is not None:
            self.action = {
                "actionType": 'click',
                "point": point
            }
        else:
            self.action = None
        return
